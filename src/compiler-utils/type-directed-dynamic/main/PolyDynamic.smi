_require "../../../basis.smi"
_require "../../../ffi/main/Pointer.smi"
_require "../../debug/main/Bug.ppg.smi"
_require "../../json/main/JSONTypes.ppg.smi"

structure PolyDynamic =
  struct
    type object (= boxed)
    type dynamic (= boxed)
    type tyRep = JSONTypes.jsonTy
    exception IlleagalJsonTy
    exception IlleagalObject

    val dynamic : ['a#dynamic.'a -> dynamic]

    val typeOf : dynamic -> tyRep
    val objOf : dynamic -> object
    val size : object -> word
    val mkDynamic : {ty:tyRep, obj:object} -> dynamic
    val sizeOf : tyRep -> word
    val offset : object * word -> object

    val deref : object -> object

    val align : object * tyRep -> object

    val getInt : object -> int
    val getReal : object -> real
    val getString : object -> string
    val getBool : object -> bool
    val isNull : object -> bool
    val car : object -> object
    val cdr : tyRep * object -> object
(*
    val getList : ['a. JSON.jsonTy * (object -> 'a) -> object -> 'a list]
*)
  end
