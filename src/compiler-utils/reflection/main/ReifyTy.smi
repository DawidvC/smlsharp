_require local "../../../basis.smi"
_require local "../../../smlformat-lib.smi"

_require local "../../../compiler/userlevelprimitive/main/UserLevelPrimitive.smi"
_require local "../../ids/main/LocalID.smi"
_require local "../../env/main/SEnv.smi"
_require local "../../debug/main/Bug.ppg.smi"


_require local "./TyToReifiedTy.smi"
_require local "./ReifyUtils.smi"
_require local "./ReifiedTyData.smi"

_require "../../../compiler/recordcalc/main/RecordCalc.ppg.smi"
_require "../../../compiler/types/main/Types.ppg.smi"
_require "../../symbols/main/Loc.ppg.smi"
_require "../../symbols/main/RecordLabel.smi"
_require "./ReifiedTy.ppg.smi"

structure ReifyTy =
struct
  val ReifiedTy : Loc.loc -> ReifiedTy.reifiedTy -> {exp:RecordCalc.rcexp, ty:Types.ty}
  val TyRep : Loc.loc -> ReifiedTy.tyRep -> {exp:RecordCalc.rcexp, ty:Types.ty}
  val RecordTy : Loc.loc -> ReifiedTy.reifiedTy RecordLabel.Map.map -> {exp:RecordCalc.rcexp, ty:Types.ty} 
end
