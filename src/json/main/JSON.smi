_require "../../basis.smi"
_require local "../../smlformat-lib.smi"
_require "../../compiler-utils/dynamic/main/Dynamic.smi"
_require "../../compiler/interactivePrinter/main/ReifiedTerm.ppg.smi"
_require "../../compiler/interactivePrinter/main/DynamicPrinter.smi"
_require "../../compiler/control/main/Bug.ppg.smi"
_require local "./JSONParser.smi"
_require local "./JSONPrim.smi"

structure JSON =
struct
  exception AttemptToReturnVOIDValue
  exception RuntimeTypeError
  exception TypeIsNotJsonKind

  datatype null = NULL
  datatype void = VOID

  datatype jsonTy 
    = ARRAYty of jsonTy
    | BOOLty
    | DYNty
    | INTty
    | NULLty
    | PARTIALRECORDty of (string * jsonTy) list
    | REALty
    | RECORDty of (string * jsonTy) list
    | STRINGty

 (* Typed JSON Objects *)
  datatype json 
    = ARRAY of json list * jsonTy
    | BOOL of bool
    | INT of int
    | NULLObject
    | OBJECT of (string * json) list
    | REAL of real
    | STRING of string

  datatype 'a dyn 
    = DYN of (json -> 'a) * json

  type dynamic (= boxed)

  val view : 'a dyn -> 'a
  val import : string -> void dyn
  val importForm : (string * string) list -> void dyn
  val toDynamic = _builtin val Dynamic : ['a#json. 'a -> dynamic]
  val dynamicToJson : dynamic -> {json:void dyn, string:string}

end
