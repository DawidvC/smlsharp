_require "./Substring.smi"
_require "./General.smi"
_require "./List.smi"
_require "./Option.smi"
_require "./String.smi"
_require "./Real64.smi"
_require "./Char.smi"
_require "./Bool.smi"
_require "../../smlnj/Basis/IO/text-io.smi"
_require "./Vector.smi"
_require "./IntInf.smi"

infix 7 * / div mod
infix 6 + - ^
infixr 5 :: @
infix 4 = <> > >= < <=
infix 3 := o
infix 0 before

type substring = Substring.substring
datatype order = datatype General.order

exception Empty = List.Empty
exception Option = Option.Option
exception Span = General.Span

val @ = List.@
val ^ = String.^
val app = List.app
val ceil = Real64.ceil
val chr = Char.chr
val concat = String.concat
val exnMessage = General.exnMessage
val explode = String.explode
val floor = Real64.floor
val foldl = List.foldl
val foldr = List.foldr
val getOpt = Option.getOpt
val hd = List.hd
val implode = String.implode
val isSome = Option.isSome
val length = List.length
val map = List.map
val not = Bool.not
val null = List.null
val ord = Char.ord
val print = TextIO.print
val real = Real64.fromInt
val rev = List.rev
val round = Real64.round
val size = String.size
val str = String.str
val substring = String.substring
val tl = List.tl
val trunc = Real64.trunc
val valOf = Option.valOf
val vector = Vector.fromList

val + =
    case 'a in 'a * 'a -> 'a of
      SMLSharp_Builtin.Int32.int => SMLSharp_Builtin.Int32.add_unsafe  (*FIXME*)
    | SMLSharp_Builtin.Word32.word => SMLSharp_Builtin.Word32.add
    | SMLSharp_Builtin.Int64.int => SMLSharp_Builtin.Int64.add_unsafe  (*FIXME*)
    | SMLSharp_Builtin.Word64.word => SMLSharp_Builtin.Word64.add
    | SMLSharp_Builtin.Word8.word => SMLSharp_Builtin.Word8.add
    | IntInf.int => IntInf.+
    | SMLSharp_Builtin.Real64.real => SMLSharp_Builtin.Real64.add
    | SMLSharp_Builtin.Real32.real => SMLSharp_Builtin.Real32.add

val - =
    case 'a in 'a * 'a -> 'a of
      SMLSharp_Builtin.Int32.int => SMLSharp_Builtin.Int32.sub_unsafe  (*FIXME*)
    | SMLSharp_Builtin.Word32.word => SMLSharp_Builtin.Word32.sub
    | SMLSharp_Builtin.Int64.int => SMLSharp_Builtin.Int64.sub_unsafe  (*FIXME*)
    | SMLSharp_Builtin.Word64.word => SMLSharp_Builtin.Word64.sub
    | SMLSharp_Builtin.Word8.word => SMLSharp_Builtin.Word8.sub
    | IntInf.int => IntInf.-
    | SMLSharp_Builtin.Real64.real => SMLSharp_Builtin.Real64.sub
    | SMLSharp_Builtin.Real32.real => SMLSharp_Builtin.Real32.sub

val * =
    case 'a in 'a * 'a -> 'a of
      SMLSharp_Builtin.Int32.int => SMLSharp_Builtin.Int32.mul_unsafe  (*FIXME*)
    | SMLSharp_Builtin.Word32.word => SMLSharp_Builtin.Word32.mul
    | SMLSharp_Builtin.Int64.int => SMLSharp_Builtin.Int64.mul_unsafe  (*FIXME*)
    | SMLSharp_Builtin.Word64.word => SMLSharp_Builtin.Word64.mul
    | SMLSharp_Builtin.Word8.word => SMLSharp_Builtin.Word8.mul
    | IntInf.int => IntInf.*
    | SMLSharp_Builtin.Real64.real => SMLSharp_Builtin.Real64.mul
    | SMLSharp_Builtin.Real32.real => SMLSharp_Builtin.Real32.mul

val div =
    case 'a in 'a * 'a -> 'a of
      SMLSharp_Builtin.Int32.int => SMLSharp_Builtin.Int32.div
    | SMLSharp_Builtin.Word32.word => SMLSharp_Builtin.Word32.div
    | SMLSharp_Builtin.Int64.int => SMLSharp_Builtin.Int64.div
    | SMLSharp_Builtin.Word64.word => SMLSharp_Builtin.Word64.div
    | SMLSharp_Builtin.Word8.word => SMLSharp_Builtin.Word8.div
    | IntInf.int => IntInf.div

val mod =
    case 'a in 'a * 'a -> 'a of
      SMLSharp_Builtin.Int32.int => SMLSharp_Builtin.Int32.mod
    | SMLSharp_Builtin.Word32.word => SMLSharp_Builtin.Word32.mod
    | SMLSharp_Builtin.Int64.int => SMLSharp_Builtin.Int64.mod
    | SMLSharp_Builtin.Word64.word => SMLSharp_Builtin.Word64.mod
    | SMLSharp_Builtin.Word8.word => SMLSharp_Builtin.Word8.mod
    | IntInf.int => IntInf.mod

val / =
    case 'a in 'a * 'a -> 'a of
      SMLSharp_Builtin.Real64.real => SMLSharp_Builtin.Real64.div
    | SMLSharp_Builtin.Real32.real => SMLSharp_Builtin.Real32.div

val ~ =
    case 'a in 'a -> 'a of
      SMLSharp_Builtin.Int32.int => SMLSharp_Builtin.Int32.neg
    | SMLSharp_Builtin.Word32.word => SMLSharp_Builtin.Word32.neg
    | SMLSharp_Builtin.Int64.int => SMLSharp_Builtin.Int64.neg
    | SMLSharp_Builtin.Word64.word => SMLSharp_Builtin.Word64.neg
    | SMLSharp_Builtin.Word8.word => SMLSharp_Builtin.Word8.neg
    | IntInf.int => IntInf.~
    | SMLSharp_Builtin.Real64.real => SMLSharp_Builtin.Real64.neg
    | SMLSharp_Builtin.Real32.real => SMLSharp_Builtin.Real32.neg

val abs =
    case 'a in 'a -> 'a of
      SMLSharp_Builtin.Int32.int => SMLSharp_Builtin.Int32.abs
    | SMLSharp_Builtin.Int64.int => SMLSharp_Builtin.Int64.abs
    | SMLSharp_Builtin.Real64.real => SMLSharp_Builtin.Real64.abs
    | SMLSharp_Builtin.Real32.real => SMLSharp_Builtin.Real32.abs
    | IntInf.int => IntInf.abs

val < =
    case 'a in 'a * 'a -> bool of
      SMLSharp_Builtin.Int32.int => SMLSharp_Builtin.Int32.lt
    | SMLSharp_Builtin.Word32.word => SMLSharp_Builtin.Word32.lt
    | SMLSharp_Builtin.Int64.int => SMLSharp_Builtin.Int64.lt
    | SMLSharp_Builtin.Word64.word => SMLSharp_Builtin.Word64.lt
    | SMLSharp_Builtin.Word8.word => SMLSharp_Builtin.Word8.lt
    | IntInf.int => IntInf.<
    | SMLSharp_Builtin.Real64.real => SMLSharp_Builtin.Real64.lt
    | SMLSharp_Builtin.Real32.real => SMLSharp_Builtin.Real32.lt
    | string => String.<
    | char => SMLSharp_Builtin.Char.lt

val > =
    case 'a in 'a * 'a -> bool of
      SMLSharp_Builtin.Int32.int => SMLSharp_Builtin.Int32.gt
    | SMLSharp_Builtin.Word32.word => SMLSharp_Builtin.Word32.gt
    | SMLSharp_Builtin.Int64.int => SMLSharp_Builtin.Int64.gt
    | SMLSharp_Builtin.Word64.word => SMLSharp_Builtin.Word64.gt
    | SMLSharp_Builtin.Word8.word => SMLSharp_Builtin.Word8.gt
    | IntInf.int => IntInf.>
    | SMLSharp_Builtin.Real64.real => SMLSharp_Builtin.Real64.gt
    | SMLSharp_Builtin.Real32.real => SMLSharp_Builtin.Real32.gt
    | string => String.>
    | char => SMLSharp_Builtin.Char.gt

val <= =
    case 'a in 'a * 'a -> bool of
      SMLSharp_Builtin.Int32.int => SMLSharp_Builtin.Int32.lteq
    | SMLSharp_Builtin.Word32.word => SMLSharp_Builtin.Word32.lteq
    | SMLSharp_Builtin.Int64.int => SMLSharp_Builtin.Int64.lteq
    | SMLSharp_Builtin.Word64.word => SMLSharp_Builtin.Word64.lteq
    | SMLSharp_Builtin.Word8.word => SMLSharp_Builtin.Word8.lteq
    | IntInf.int => IntInf.<=
    | SMLSharp_Builtin.Real64.real => SMLSharp_Builtin.Real64.lteq
    | SMLSharp_Builtin.Real32.real => SMLSharp_Builtin.Real32.lteq
    | string => String.<=
    | char => SMLSharp_Builtin.Char.lteq

val >= =
    case 'a in 'a * 'a -> bool of
      SMLSharp_Builtin.Int32.int => SMLSharp_Builtin.Int32.gteq
    | SMLSharp_Builtin.Word32.word => SMLSharp_Builtin.Word32.gteq
    | SMLSharp_Builtin.Int64.int => SMLSharp_Builtin.Int64.gteq
    | SMLSharp_Builtin.Word64.word => SMLSharp_Builtin.Word64.gteq
    | SMLSharp_Builtin.Word8.word => SMLSharp_Builtin.Word8.gteq
    | IntInf.int => IntInf.>=
    | SMLSharp_Builtin.Real64.real => SMLSharp_Builtin.Real64.gteq
    | SMLSharp_Builtin.Real32.real => SMLSharp_Builtin.Real32.gteq
    | string => String.>=
    | char => SMLSharp_Builtin.Char.gteq
