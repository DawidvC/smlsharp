_require "../../../basis/main/Char.smi"
_require "../../../basis/main/Word.smi"
_require "../../../basis/main/Array.smi"
_require "../../../basis/main/Real.smi"
_require "../../../basis/main/Vector.smi"
_require "../../../basis/main/StringCvt.smi"
_require "../../../basis/main/Option.smi"
_require "../../../basis/main/General.smi"
_require "../../../basis/main/Int.smi"
_require "../../../basis/main/String.smi"
_require "../../../basis/main/Substring.smi"
_require "../../../basis/main/TextIO.smi"
_require "../../../basis/main/binary-op.smi"

_require "FormatExpression.smi"
_require "FORMAT_EXPRESSION.sig"
_require "AssocResolver.smi"
_require "PrettyPrinter.smi"
_require "PrinterParameter.smi"
_require "PRINTER_PARAMETER.sig"
_require "Truncator.smi"
_require "PreProcessor.smi"
_require "BasicFormatters.smi"
_require "BASIC_FORMATTERS.sig"
_require "SMLFORMAT.sig"

structure SMLFormat = 
struct
  structure FormatExpression = FormatExpression
  structure PrinterParameter = PrinterParameter
  structure BasicFormatters = BasicFormatters
  datatype parameter = datatype PrinterParameter.parameter
  exception Fail of string
  val traceLevel : int ref
  val prettyPrint : parameter list 
		    -> FormatExpression.expression list -> string
end
