_require local "../../../basis.smi"
_require local "../../../ml-yacc-lib.smi"
_require local "../../../compiler-utils/symbols/main/Loc.ppg.smi"
_require local "../../../compiler-utils/debug/main/Bug.ppg.smi"
_require local "../../absyn/main/FormatTemplate.ppg.smi"

_require "./iml.grm.smi"

structure MLLex =
struct
  structure UserDeclarations =
  struct
    type token = MLLrVals.Tokens.token
    type pos = MLLrVals.Tokens.pos
    type arg (= boxed)
    val isINITIAL : arg -> bool
    val initArg : {sourceName : string,
                   isPrelude : bool,
                   enableMeta : bool,
                   lexErrorFn : (string * pos * pos) -> unit,
                   initialLineno : int,
                   allow8bitId : bool} -> arg
  end
  val makeLexer
      : (int -> string) -> UserDeclarations.arg -> unit
        -> UserDeclarations.token
end
