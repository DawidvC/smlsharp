_require local "../../../basis.smi"
_require local "../../../ml-yacc-lib.smi"
_require local "../../../compiler-utils/symbols/main/Loc.ppg.smi"
_require local "../../../compiler-utils/debug/main/Bug.ppg.smi"

_require local "../../usererror/main/UserError.ppg.smi"
_require local "../../control/main/Control.ppg.smi"
_require local "./interface.grm.smi"
_require local "./interface.lex.smi"
_require local "./ParserError.ppg.smi"

_require "../../absyn/main/AbsynInterface.ppg.smi"

structure InterfaceParser =
struct
  type source = {read : int -> string, sourceName : string}
  type input (= boxed)
  val setup : source -> input
  val parse : input -> AbsynInterface.itop
end
