_require "../../../basis.smi"
_require "../../../smlformat-lib.smi"
_require local "../../../compiler/control/main/Control.ppg.smi"

structure TermPrintUtils =
struct
  type format = SMLFormat.FormatExpression.expression list
  val makeLines : string -> format
  val format_int : int -> format
  val format_real : real -> format
  val format_int_json : int -> format
  val format_real_json : real -> format
  val format_string : string -> format
  val format_label : string -> format
  val format_char : char -> format
  val format_int32 : Int32.int -> format
  val format_int64 : Int64.int -> format
  val format_real32 : Real32.real -> format
  val format_word32 : Word32.word -> format
  val format_word64 : Word64.word -> format
  val format_word8 : Word8.word -> format
  val format_IntInf : IntInf.int -> format
  val formatElements 
    : 'a SMLFormat.BasicFormatters.formatter * format * format -> 'a list -> format
  val format_lazyArray 
    : 'a SMLFormat.BasicFormatters.formatter * format * format
       -> (int option -> {contents:'a list, hasEllipsis:bool}) -> format
  val formatPrependedOpt 
    : ('a -> format) * format -> 'a option -> format
  val formatIfCons : format -> 'a list -> format
  val prettyPrint : format -> string
end
