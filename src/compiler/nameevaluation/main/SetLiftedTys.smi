_require local "../../../basis.smi"
_require local "../../../compiler-utils/env/main/SEnv.smi"
_require local "../../../compiler-utils/symbols/main/RecordLabel.smi"
_require local "../../../compiler-utils/debug/main/Bug.ppg.smi"
_require local "../../../compiler-utils/ids/main/LocalID.smi"

_require local "../../types/main/TvarMap.smi"
_require local "../../util/main/SCCFun.smi"
_require local "./NameEvalUtils.smi"
_require local "./TfunVars.smi"

_require "../../../compiler-utils/symbols/main/Symbol.ppg.smi"
_require "../../types/main/IDCalc.ppg.smi"
_require "./NameEvalEnv.ppg.smi"


structure SetLiftedTys =
struct
  val getId : IDCalc.tfunkind ref -> IDCalc.typId
  val setLiftedTysEnv : NameEvalEnv.env
                        -> (Symbol.symbol list * IDCalc.tfunkind ref) list list
  val setLiftedTysSpecEnv : NameEvalEnv.env
                        -> (Symbol.symbol list * IDCalc.tfunkind ref) list list
end
