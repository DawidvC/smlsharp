_require "../../../basis.smi"
_require "../../../smlformat-lib.smi"
_require "../../../compiler-utils/digest/main/SHA3.smi"
_require "../../toolchain/main/Filename.smi"

structure InterfaceName =
struct

  type hash (= boxed)

  val hash : string -> hash
  val hashToString : hash -> string
  val hashToWord64 : hash -> Word64.word

  datatype file_place =
      STDPATH
    | LOCALPATH

  type source =
      file_place * Filename.filename

  type interface_name =
      {
        hash: hash,
        source: source
      }

  type dependency =
      {
        (* name of this interface *)
        interfaceNameOpt : interface_name option,
        (* list of interface files needed to load this *)
        link : interface_name list,
        (* list of files loaded during loading this *)
        compile : source list
      }

  val format_hash
      : hash -> SMLFormat.FormatExpression.expression list
  val format_file_place
      : file_place -> SMLFormat.FormatExpression.expression list
  val format_source
      : source -> SMLFormat.FormatExpression.expression list
  val format_interface_name
      : interface_name -> SMLFormat.FormatExpression.expression list
  val formatSimple_interface_name
      : interface_name -> SMLFormat.FormatExpression.expression list
end
