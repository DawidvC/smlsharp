_require local "../../../basis.smi"

_require local "../../usererror/main/UserErrorUtils.smi"
_require local "./ElaborateInterface.smi"
_require local "./ElaborateModule.smi"
_require local "./UserTvarScope.smi"

_require "../../../compiler-utils/symbols/main/Symbol.ppg.smi"
_require "../../absyn/main/AbsynInterface.ppg.smi"
_require "../../absyn/main/Fixity.smi"
_require "../../patterncalc/main/PatternCalcInterface.ppg.smi"
_require "../../usererror/main/UserError.ppg.smi"

structure Elaborator =
struct
  type fixEnv = Fixity.fixity SymbolEnv.map
  val extendFixEnv : fixEnv * fixEnv -> fixEnv
  val elaborate :
      fixEnv
      -> AbsynInterface.compileUnit
      -> fixEnv * PatternCalcInterface.compileUnit * UserError.errorInfo list
  val elaborateInteractiveEnv :
      fixEnv
      -> AbsynInterface.interactiveUnit
      -> fixEnv * PatternCalcInterface.interactiveUnit * UserError.errorInfo list

  val elaborateInterface :
      fixEnv
      -> AbsynInterface.interface_unit
      -> fixEnv
         * PatternCalcInterface.interface_unit
         * UserError.errorInfo list

end
