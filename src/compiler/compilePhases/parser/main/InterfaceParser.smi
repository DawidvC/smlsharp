_require local "../../../../basis.smi"
_require local "../../../../ml-yacc-lib.smi"
_require local "../../../data/symbols/main/Loc.ppg.smi"
_require local "../../../extensions/debug/main/Bug.ppg.smi"

_require local "../../../extensions/usererror/main/UserError.ppg.smi"
_require local "../../../data/control/main/Control.ppg.smi"
_require local "./interface.grm.smi"
_require local "./interface.lex.smi"
_require local "./ParserError.ppg.smi"

_require "../../../compilerIRs/absyn/main/AbsynInterface.ppg.smi"

structure InterfaceParser =
struct
  type source = {read : int -> string, sourceName : string}
  type input (= boxed)
  val setup : source -> input
  val parse : input -> AbsynInterface.itop
end
