_require "../../../../basis.smi"
_require local "../../../../config/main/Version.smi"
_require local "../../../../config/main/Config.smi"
_require local "../../../../llvm/main/LLVM.smi"
_require local "../../../data/symbols/main/Loc.ppg.smi"
_require local "../../../extensions/debug/main/Bug.ppg.smi"
_require local "../../../libs/env/main/SEnv.smi"

_require local "../../../data/control/main/Control.ppg.smi"
_require local "../../../libs/util/main/Counter.smi"
_require local "../../../extensions/usererror/main/UserError.ppg.smi"
_require "../../../libs/toolchain/main/Filename.smi"
_require local "../../../libs/toolchain/main/CoreUtils.smi"
_require local "../../../libs/toolchain/main/TempFile.smi"
_require local "../../../libs/toolchain/main/BinUtils.smi"
_require "../../../libs/toolchain/main/LLVMUtils.smi"
_require "../../../compilerIRs/absyn/main/InterfaceName.ppg.smi"
_require local "../../../compilePhases/parser/main/Parser.smi"
_require "../../../compilePhases/toplevel/main/Top.smi"
_require local "./GetOpt.smi"
_require local "./RunLoop.smi"
_require local "./ExecutablePath.smi"
_require "./FilenameMap.smi"

structure Main =
struct

  val loadConfig
      : ['a#{systemBaseDir : Filename.filename option}. 'a -> unit]
  val loadBuiltin
      : ['a#{systemBaseDir : Filename.filename}. 'a -> Top.toplevelContext]
  val loadPrelude
      : ['a#{systemBaseDir : Filename.filename,
             topContext : unit -> Top.toplevelContext,
             topOptions : 'b,
             require : Filename.filename list},
         'b#{loadPath : Filename.filename list,
             stdPath : Filename.filename list}.
         'a -> InterfaceName.file_dependency list * Top.toplevelContext]
  val makeLLVMOptions
      : ['a#{systemBaseDir : Filename.filename option,
             triple : string option,
             arch : string,
             cpu : string,
             features : string,
             optLevel : LLVMUtils.opt_level,
             relocModel : LLVMUtils.reloc_model option,
             LLCFLAGS : string list,
             OPTFLAGS : string list}.
         'a -> LLVMUtils.compile_options]

  val compileSMLFile
      : ['a#{llvmOptions : LLVMUtils.compile_options,
             topOptions : Top.options,
             topContext : unit -> Top.toplevelContext}.
         'a
         -> {outputFileType : LLVMUtils.file_type,
             outputFilename : Filename.filename}
         -> Filename.filename
         -> InterfaceName.dependency]

  val link
      : ['a#{llvmOptions : LLVMUtils.compile_options,
             topOptions : Top.options,
             topContext : unit -> Top.toplevelContext,
             linkOptions : 'b,
             fileMap : (unit -> FilenameMap.map) option},
         'b#{LDFLAGS : string list,
             LIBS : string list,
             noStdLib : bool,
             useCXX : bool,
             linkAll : bool}.
         'a
         -> {sourceFiles : Filename.filename list,
             outputFile : Filename.filename}
         -> unit]

  val printDependCompile
      : ['a#{llvmOptions : LLVMUtils.compile_options,
             topOptions : Top.options,
             topContext : unit -> Top.toplevelContext}.
         'a
         -> {limit : InterfaceName.file_place, out : TextIO.outstream}
         -> Filename.filename
         -> unit]

  val printDependLink
      : ['a#{llvmOptions : LLVMUtils.compile_options,
             topOptions : Top.options,
             topContext : unit -> Top.toplevelContext,
             fileMap : (unit -> FilenameMap.map) option}.
         'a
         -> {limit : InterfaceName.file_place, out : TextIO.outstream}
         -> Filename.filename
         -> unit]

  val generateMakefile
      : ['a#{llvmOptions : LLVMUtils.compile_options,
             topOptions : Top.options,
             topContext : unit -> Top.toplevelContext,
             fileMap : (unit -> FilenameMap.map) option}.
         'a
         -> TextIO.outstream
         -> Filename.filename list
         -> unit]

  val command : string * string list -> unit

  val main : string * string list -> OS.Process.status

end
