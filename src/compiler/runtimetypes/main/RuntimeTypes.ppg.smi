_require local "../../../basis.smi"
_require local "../../../compiler-utils/format-utils/main/SmlppgUtil.ppg.smi"
_require local "../../util/main/TermFormat.smi"

_require "../../../smlformat-lib.smi"
_require "./FFIAttributes.ppg.smi"

structure RuntimeTypes =
struct
  datatype tag =
      TAG_BOXED
    | TAG_UNBOXED
  datatype ty =
      UNITty
    | INT8ty
    | INT16ty
    | INT32ty
    | INT64ty
    | UINT8ty
    | UINT16ty
    | UINT32ty
    | UINT64ty
    | DOUBLEty
    | FLOATty
    | BOXEDty
    | POINTERty
    | SOME_CODEPTRty
    | MLCODEPTRty of
      {
        haveClsEnv: bool,
        argTys: ty list,
        retTy: ty option
      }
    | CALLBACKCODEPTRty of
      {
        haveClsEnv: bool,
        argTys: ty list,
        retTy: ty option,
        attributes: FFIAttributes.attributes
      }
    | FOREIGNCODEPTRty of
      {
        argTys: ty list,
        varArgTys: ty list option,
        retTy: ty option,
        attributes: FFIAttributes.attributes
      }
  val format_tag : tag -> SMLFormat.FormatExpression.expression list
  val format_ty : ty -> SMLFormat.FormatExpression.expression list
end
