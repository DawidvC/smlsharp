_require local "../../../basis.smi"
_require local "../../../compiler-utils/symbols/main/Loc.ppg.smi"
_require local "../../../compiler-utils/symbols/main/Symbol.ppg.smi"
_require local "../../../compiler-utils/symbols/main/RecordLabel.smi"
_require local "../../../compiler-utils/debug/main/Bug.ppg.smi"
_require local "../../../compiler-utils/ids/main/LocalID.smi"
_require local "../../../compiler-utils/env/main/SEnv.smi"

_require local "../../patterncalc/main/PatternCalc.ppg.smi"
_require local "../../typedcalc/main/TypedCalcUtils.smi"
_require local "../../typedcalc/main/TCAlphaRename.smi"
_require local "../../types/main/TyAlphaRename.smi"
_require local "../../types/main/Types.ppg.smi"
_require local "../../types/main/TypesBasics.smi"
_require local "./TypeInferenceUtils.smi"
_require local "./UNCURRYFUNDECL.sig"

_require "../../typedcalc/main/TypedCalc.ppg.smi"

structure UncurryFundecl =
  struct
    val optimize : TypedCalc.tpdecl list -> TypedCalc.tpdecl list
  end
