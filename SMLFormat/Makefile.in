# Makefile for SMLFormat
# $Id: Makefile.in,v 1.14 2007/03/05 13:44:51 katsu Exp $

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=$(exec_prefix)/bin
libdir=$(prefix)/share/smlformat
DESTDIR=

EXEEXT=@EXEEXT@

INSTALL=install
MLTON=@MLTON@
MLYACC=mlyacc
MLLEX=mllex
SML=@SMLCM@
SML_CMD=@SML@
MAINFUNC=@MAINFUNC@
HEAPNAME=@HEAPNAME@
SMLSHARP=@SMLSHARP@

MLTON_TARGET=bin/smlformat$(EXEEXT)
SMLNJ_TARGET=bin/smlformat
SMLSHARP_TARGET=bin/smlformat

all: @COMPILER@-build

clean:
	-rm -f $(MLTON_TARGET) $(SMLNJ_TARGET)
	-rm -rf generator/main/CM formatlib/main/CM formatlib/test/CM
	-rm -rf generator/main/.cm formatlib/main/.cm formatlib/test/.cm
	-rm -f generator/main/ml.lex.sml
	-rm -f generator/main/ml.grm.sml generator/main/ml.grm.sig
	-rm -f generator/main/ml.grm.desc

########################################
# for build by MLton

# build every time.
mlton-build: generator/main/ml.grm.sml generator/main/ml.lex.sml  
	$(MLTON) -output $(MLTON_TARGET) generator/mlton/smlformat.mlb

generator/main/ml.lex.sml: generator/main/ml.lex
	$(MLLEX) generator/main/ml.lex

generator/main/ml.grm.sml: generator/main/ml.grm
	$(MLYACC) generator/main/ml.grm

########################################
# for build by SML#

# build every time.
smlsharp-build: generator/main/ml.grm.sml generator/main/ml.lex.sml  
	$(SMLSHARP) -o $(SMLSHARP_TARGET) -c generator/main/sources.sml

########################################
# for build by SML/NJ

# Since the filename of heap file generated by exportFn cannot be detected
# easily, we cannot write a make-rule for the heap file.
# So, we make a rule for bin/smlformat delegate a rule for the heap file.

# build every time.
smlnj-build:
	$(MAKE) heap
	echo "#!/bin/sh" > $(SMLNJ_TARGET)
	echo "SML='"`echo '$(SML_CMD)' | sed 's,^cmd /c ,,'`"'" >> $(SMLNJ_TARGET)
	echo "HEAPNAME='$(HEAPNAME)'" >> $(SMLNJ_TARGET)
	if expr "$(SML_CMD)" : "cmd /c " > /dev/null 2>&1; then \
          echo 'cmd /c "$$SML @SMLload=$$HEAPNAME $$*"' >> $(SMLNJ_TARGET); \
	else \
	  echo 'exec $$SML @SMLload="$$HEAPNAME" "$$@"' >> $(SMLNJ_TARGET); \
	fi
	chmod +x $(SMLNJ_TARGET)

heap:
	cd generator/main && \
	echo 'CM.make @CM_MAKE_ARG@;' \
	     'SMLofNJ.exportFn("$(HEAPNAME)",$(MAINFUNC));' \
	| $(SML)

test:
	cd formatlib/test && \
	echo 'SMLofNJ.Internals.GC.messages false;' \
	     'CM.make @CM_MAKE_ARG@;' \
	     'TestMain.test();' \
	| $(SML_CMD)

#install: $(TARGETS)
#	$(INSTALL) -m 755 -d $(DESTDIR)$(bindir)
#	$(INSTALL) -m 755 bin/smlformat $(DESTDIR)$(bindir)
#	$(INSTALL) -m 755 -d $(DESTDIR)$(libdir)
#	$(INSTALL) -m 644 smlformatlib.cm $(DESTDIR)$(libdir)
#	$(INSTALL) -m 755 -d $(DESTDIR)$(libdir)/formatlib/main
#	@find formatlib/main -type f | grep -v CVS | grep -v '^\.' | \
#	(while read i; do \
#	  echo $(INSTALL) -m 644 $$i $(DESTDIR)$(libdir)/formatlib/main; \
#	  $(INSTALL) -m 644 $$i $(DESTDIR)$(libdir)/formatlib/main; \
#	done)
