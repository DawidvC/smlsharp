structure FormatExpression{
 type priority
 type assocDirection
 type assoc
 type expression
 val isHigherThan
 val assocToString
 val priorityToString
 val toString
}
structure PrinterParameter{
 type printerParameter
}
structure PrettyPrinter{
 structure FE{
  type priority => structure FormatExpression
  type assocDirection => structure FormatExpression
  type assoc => structure FormatExpression
  type expression => structure FormatExpression
  val isHigherThan
  val assocToString
  val priorityToString
  val toString
 }
 type environmentEntry
 type environment
 type symbol
 val sort
 val format
 exception Fail
 exception UnMatchEndOfIndent
 exception IndentUnderFlow
}
structure PreProcessor{
 structure FE{
  type priority => structure FormatExpression
  type assocDirection => structure FormatExpression
  type assoc => structure FormatExpression
  type expression => structure FormatExpression
  val isHigherThan
  val assocToString
  val priorityToString
  val toString
 }
 structure PP{
  structure FE => structure PrettyPrinter . structure FE
  type environmentEntry => structure PrettyPrinter
  type environment => structure PrettyPrinter
  type symbol => structure PrettyPrinter
  val sort
  val format
  exception Fail
  exception UnMatchEndOfIndent
  exception IndentUnderFlow
 }
 structure Environment{
  type entry
  type environment
  val create
  val getEntry
  val map
  val removeEntry
 }
 type context
 val calculate
 val removeAssoc
 val preProcess
 exception Fail
 exception UnMatchEndOfIndent
}
structure BasicFormatters{
 structure FE{
  type priority => structure FormatExpression
  type assocDirection => structure FormatExpression
  type assoc => structure FormatExpression
  type expression => structure FormatExpression
  val isHigherThan
  val assocToString
  val priorityToString
  val toString
 }
 type expression
 type formatter
 val format_unit
 val format_int
 val format_word
 val format_real
 val format_char
 val format_string
 val format_substring
 val format_exn_Ref
 val format_exn
 val format_array
 val format_vector
 val format_ref
 val format_bool
 val format_option
 val format_order
 val format_list
}
structure SMLFormat{
 structure FormatExpression{
  type priority => structure FormatExpression
  type assocDirection => structure FormatExpression
  type assoc => structure FormatExpression
  type expression => structure FormatExpression
  val isHigherThan
  val assocToString
  val priorityToString
  val toString
 }
 structure PrinterParameter{
  type printerParameter => structure PrinterParameter
 }
 structure BasicFormatters{
  structure FE => structure BasicFormatters . structure FE
  type expression => structure BasicFormatters
  type formatter => structure BasicFormatters
  val format_unit
  val format_int
  val format_word
  val format_real
  val format_char
  val format_string
  val format_substring
  val format_exn_Ref
  val format_exn
  val format_array
  val format_vector
  val format_ref
  val format_bool
  val format_option
  val format_order
  val format_list
 }
 val prettyPrint
 exception Fail
}
signature FORMAT_EXPRESSION{
 type priority
 type assocDirection
 type assoc
 type expression
 val isHigherThan
 val assocToString
 val priorityToString
 val toString
}
signature PRINTER_PARAMETER{
 type printerParameter
}
signature PRETTYPRINTER{
 type environmentEntry
 type environment
 type symbol
 val format
 exception Fail
}
signature PREPROCESSOR{
 val preProcess
 exception Fail
}
signature BASIC_FORMATTERS{
 type expression
 type formatter
 val format_unit
 val format_int
 val format_word
 val format_real
 val format_char
 val format_string
 val format_substring
 val format_exn
 val format_exn_Ref
 val format_array
 val format_vector
 val format_ref
 val format_bool
 val format_option
 val format_order
 val format_list
}
signature SMLFORMAT{
 structure FormatExpression{
  type priority => signature FORMAT_EXPRESSION
  type assocDirection => signature FORMAT_EXPRESSION
  type assoc => signature FORMAT_EXPRESSION
  type expression => signature FORMAT_EXPRESSION
  val isHigherThan
  val assocToString
  val priorityToString
  val toString
 }
 structure PrinterParameter{
  type printerParameter => signature PRINTER_PARAMETER
 }
 structure BasicFormatters{
  type expression => signature BASIC_FORMATTERS
  type formatter => signature BASIC_FORMATTERS
  val format_unit
  val format_int
  val format_word
  val format_real
  val format_char
  val format_string
  val format_substring
  val format_exn
  val format_exn_Ref
  val format_array
  val format_vector
  val format_ref
  val format_bool
  val format_option
  val format_order
  val format_list
 }
 val prettyPrint
 exception Fail
}
