#!/bin/sh
#
# easy configuration script for SMLFormat
#
# This script does
#   * generate Makefile from Makefile.in
#   * generate formatlib/smlunitlib.cm (optional)
#
# @author UENO Katsuhiro
# @author YAMATODANI Kiyoshi
# @version $Id: configure,v 1.17 2007/04/02 09:42:28 katsu Exp $

###############################################################################

pwd=`pwd`
host_os=`uname -s|sed y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/`
prefix=/usr/local
smlunitdir="$pwd/../SMLUnit"
if test -d ${pwd}/basis_compat ;then
basisdir="$pwd/basis_compat"
else
basisdir="$pwd/../basis_compat"
fi

compiler=mlton
MLTON=mlton
SMLSHARP=smlsharp

###############################################################################

usage="Usage: $0 OPTIONS...

Options:
  --help                print this message.
  --prefix=DIR          install files to DIR [default=$prefix]
  --exec-prefix=DIR     isntall executables to DIR [default=$prefix]
  --with-smlunit=DIR    use SMLUnit [default=$smlunitdir]
  --with-basis=DIR      use basis [default=$basisdir]
  --with-smlnj          use SML/NJ [default=no]
  --with-mlton          use MLton [default=yes]
  --with-smlsharp       use SML# [default=no]
"

for opt in "$@"
do
  optarg=`expr "x$opt" : 'x[^=]*=\(.*\)'`
  case "$opt" in
    --help)
      echo "$usage"
      exit 0
      ;;
    --prefix=*)
      prefix="$optarg"
      ;;
    --exec_prefix=*)
      exec_prefix="$optarg"
      ;;
    --with-smlunit=*)
      smlunitdir="$optarg"
      ;;
    --without-smlunit)
      smlunitdir=
      ;;
    --with-basis=*)
      basisdir="$optarg"
      ;;
    --with-smlnj)
      compiler=smlnj
      ;;
    --with-mlton)
      compiler=mlton
      ;;
    --with-smlsharp)
      compiler=smlsharp
      ;;
    *)
      echo "$0: error: unrecognized option: $opt" 1>&2
      echo "Try \`$0 --help' for more information." 1>&2
      exit 1
      ;;
  esac
done

echo "SML compiler for building smlformat... $compiler"

###############################################################################

msyspath () {
  case "$1" in
    /[a-zA-Z]/*) echo "$1" | sed 's,/\(.\)/,\1:/,' ;;
    /[a-zA-Z]) echo "$1" | sed 's,/\(.\),\1:/,' ;;
    /*) root=`cd / && pwd -W`; echo "$root$1" ;;
    [a-zA-Z]:*) echo "$1" ;;
    *) echo "$1" ;;
  esac
}

cmpath () {
  case "$host_os" in
    *cygwin*)
      if test "x$SMLNJ_CYGWIN_RUNTIME" = "x"; then
        # Win32 SML/NJ CM requires '\' as separator.
        # On cygwin, the path must be converted to Windows style.
        cygpath -aw "$1"
      else
        # Cygwin SML/NJ CM requires UNIX form path.
        cygpath -au "$1"
      fi
      ;;
    *mingw*)
      msyspath "$1" | sed 's,/,\\\\,g'
      ;;
    *)
      echo "$1"
      ;;
  esac
}

if test "x$exec_prefix" = "x"; then
  exec_prefix='${prefix}'
fi

smlunitlib_cm="$smlunitdir/smlunitlib.cm"
if test -f "$smlunitlib_cm"; then
  smlunitlib_cm=`cmpath "$smlunitlib_cm"`
  echo 'creating formatlib/smlunitlib.cm'
  echo "Alias \"$smlunitlib_cm\"" > ./formatlib/smlunitlib.cm
else
  echo '*** NOTICE: --with-smlunit option is not specified.' 1>&2
  echo '***         generation for SMLUnit is skipped.' 1>&2
fi

###############################################################################

SMLFORMATDIR="$pwd"
BASISDIR="$basisdir/main"
EXEEXT=

case "$host_os" in
*cygwin*)
  SMLFORMATDIR=`cygpath -am "$SMLFORMATDIR"`
  BASISDIR=`cygpath -am "$BASISDIR"`
  EXEEXT=.exe
  ;;
*mingw*)
  SMLFORMATDIR=`msyspath "$SMLFORMATDIR"`
  BASISDIR=`msyspath "$BASISDIR"`
  EXEEXT=.exe
  ;;
*)
  ;;
esac

case "$compiler" in
mlton)
  ;;

smlnj)
  HEAPNAME="$pwd/bin/smlformat-heap"
  MAINFUNC=Main.main

  case "$host_os" in
  *cygwin*)
    if test "x$SMLNJ_CYGWIN_RUNTIME" = "x"; then
      SML=sml.bat
      HEAPNAME="$HEAPNAME.x86-win32"
      MAINFUNC='(fn (p,_::ps)=> Main.main(p,ps) | (p,nil)=> Main.main(p,nil))'
    else
      SML=sml
      HEAPNAME="$HEAPNAME.x86-cygwin"
    fi
    SMLCM=sml-cm.bat
    HEAPNAME=`cygpath -am "$HEAPNAME"`
    ;;
  *mingw*)
    # we don't support the combination of mingw and cygwin runtime.
    if test "x$SMLNJ_CYGWIN_RUNTIME" = "x"; then
      HEAPNAME="$HEAPNAME.x86-win32"
      MAINFUNC='(fn (p,_::ps)=> Main.main(p,ps) | (p,nil)=> Main.main(p,nil))'
      SML='cmd /c sml.bat'
      SMLCM='cmd /c sml-cm.bat'
      HEAPNAME=`msyspath "$HEAPNAME"`
    else
      echo 'cygwin runtime on mingw is not supported.' 1>&2
      exit 1
    fi
    ;;
  *)
    SML=sml
    SMLCM=sml-cm
    ;;
  esac
  ;;

smlsharp)
  ;;

*)
  echo "*** BUG ***" 1>&2
  exit 127
esac

###############################################################################

case "$compiler" in
smlnj)
  echo 'checking for new CM... '
  if echo 'CM.make;' | $SML | grep 'string ->' > /dev/null; then
    echo 'new CM detected.'
    CM_MAKE_ARG='"newcm.cm"'
    SMLCM="$SML"
  else
    echo 'old CM detected.'
    CM_MAKE_ARG='()'
  fi
  ;;
esac

###############################################################################

for i in \
  generator/main/newcm.cm \
  generator/mlton/preludes.mlb \
  generator/main/sources.sml \
  Makefile
do
  echo "creating $i"
  sed "
s,@host_os@,$host_os,
s,@prefix@,$prefix,
s,@exec_prefix@,$exec_prefix,
s,@SML@,$SML,
s,@SMLCM@,$SMLCM,
s!@MAINFUNC@!$MAINFUNC!
s,@CM_MAKE_ARG@,$CM_MAKE_ARG,
s,@HEAPNAME@,$HEAPNAME,
s,@BASISDIR@,$BASISDIR,
s,@SMLFORMATDIR@,$SMLFORMATDIR,
s,@EXEEXT@,$EXEEXT,
s,@MLTON@,$MLTON,
s,@COMPILER@,$compiler,
s,@SMLSHARP@,$SMLSHARP,
  " "$i.in" > "$i"
done

# configure ends here.
