#!/bin/sh

: ${SMLSHARP:=./minismlsharp}
: ${SMLFLAGS:=}
: ${files_mk:=files.mk}
: ${depend_mk:=depend.mk}

LF='
'

args="$*"
smifiles=""
while [ "$#" -ge 2 ]; do
  smifiles="$smifiles $2"
  shift 2
done

set -e
filelist=`mktemp`
allfiles=`mktemp`
trap 'rm -f "$filelist" "$allfiles"' EXIT

echo $SMLSHARP -Bsrc -nostdpath $SMLFLAGS -Mm $smifiles 1>&2
dep=`$SMLSHARP -Bsrc -nostdpath $SMLFLAGS -Mm $smifiles`
[ "$?" = "0" ] || exit 1

echo "$dep" \
| sed '/^SMLSHARP = /d;/^	/d;/[^\\]$/G' \
| awk -v args="$args" \
      -v RS="" \
      -v depend_mk="$depend_mk" \
      -v files_mk="$files_mk" \
      -v filelist="$filelist" \
      -v allfiles="$allfiles" \
'
  BEGIN {
    n = split(args, a);
    for (i = 1; i < n; i += 2) {
      sub("\\.smi$", ":", a[i+1]);
      projects[a[i+1]] = a[i];
    }
    print "# auto-generated by mkdepend. DO NOT EDIT BY HAND." > depend_mk;
    print "# auto-generated by mkdepend. DO NOT EDIT BY HAND." > files_mk;
  }
  /^[^ :]*\.o:/ {
    print $0" \\\n $(SMLSHARP_DEP)" >> depend_mk;
    next
  }
  $1 in projects {
    p = projects[$1];
    gsub(" *\\\\\n *", " ");
    n = split($0, a);
    k = match(p, "_LIB$");
    for (i = 2; i <= n; i++) files[a[i]] += k;
    out = "";
    for (i = 2; i <= n; i++) {
      if (match(a[i], "\\.o$"))
        out = out" \\\n"a[i];
    }
    print p"_OBJECTS ="out >> files_mk;
  }
  END {
    for (i in files) {
      if (files[i] != 0) print i >> filelist;
      print i >> allfiles;
    }
  }
'

GEN_SOURCES=
CLEAN_FILES=
ALL_OBJECTS=`sed '/:/!d;s/:.*$//' "$depend_mk"`
IFS=$LF

for i in `echo "$ALL_OBJECTS" | sed 's/\.o$//'`; do
  case "$i" in
    src/ml-yacc/src/yacc.lex) ;;
    src/ml-yacc/src/yacc.grm) ;;
    *.ppg)
      GEN_SOURCES="$GEN_SOURCES$LF$i.sml"
      echo "$i.sml: $i \$(SMLFORMAT_DEP)" >> "$depend_mk"
      ;;
    *.lex)
      GEN_SOURCES="$GEN_SOURCES$LF$i.sml"
      echo "$i.sml: $i \$(MLLEX_DEP)" >> "$depend_mk"
      ;;
    *.grm)
      GEN_SOURCES="$GEN_SOURCES$LF$i.sml$LF$i.sig"
      CLEAN_FILES="$CLEAN_FILES$LF$i.sml.desc"
      echo "$i.sml $i.sig: $i \$(MLYACC_DEP)" >> "$depend_mk"
      echo "$i.sig: $i.sml" >> "$depend_mk"
      ;;
  esac
done

(echo 'INSTALL_FILES_OBJ ='; grep '\.o$' "$filelist" | sort) \
  | sed '$!s/$/ \\/' >> "$files_mk"
(echo 'INSTALL_FILES_SRC ='; grep -v '\.o$' "$filelist" | sort) \
  | sed '$!s/$/ \\/' >> "$files_mk"
echo "ALL_OBJECTS =$LF$ALL_OBJECTS" | sed '$!s/$/ \\/' >> "$files_mk"
echo "GEN_SOURCES =$GEN_SOURCES" | sed '$!s/$/ \\/' >> "$files_mk"
echo "CLEAN_FILES =$CLEAN_FILES" | sed '$!s/$/ \\/' >> "$files_mk"

if [ -d ../.hg ]; then
  HG_PLAIN=1
  export HG_PLAIN=1
  set +e
  cat "$allfiles" | sort | sed '
    /\.o$/d;
    \,^src/ml-yacc/src/yacc\.lex\.sml$,n;
    \,^src/ml-yacc/src/yacc\.grm\.sml$,n;
    \,^src/config/main/Version\.sml$,d;
    \,^src/config/main/PointerSize\.sml$,d;
    /\.ppg\.sml/d;
    /\.grm\.sml/d;
    /\.grm.sig/d;
    /\.lex\.sml/d
  ' | xargs hg status -A | grep -v '^[MAC]'
  if [ "$?" = "0" ]; then
    echo "*** Add these files to the repository."
    exit 1
  fi
fi
