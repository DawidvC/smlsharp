#!/bin/sh

: ${SMLSHARP:=./minismlsharp}
: ${OBJEXT:=o}
: ${files_mk:=files.mk}
: ${depend_mk:=depend.mk}

LF='
'
NL="\\$LF"
ALL_OBJECTS=
INSTALL_FILES_SRC=
INSTALL_FILES_OBJ=
GEN_SOURCES=
CLEAN_FILES=

depfiles () {
  echo $SMLSHARP -Bsrc -nostdpath "$@" 1>&2
  tmp=`$SMLSHARP -Bsrc -nostdpath "$@"`
  st=$?; test "$st" = "0" || exit $st
  echo "$tmp" | sed '1s,^[^:]*:,,;s,^ *,,;s, *\\*$,,;s,  *,'"$NL"',g'
}

print_bind () {
  tmp=`eval "echo \"\\\$$1\"" | sort | uniq`
  eval "$1=\$tmp"
  echo "$1 = $tmp" | sed 's, *$,,;$!s,$, \\,' >> $files_mk
}

echo '# auto-generated by mkdepend. DO NOT EDIT BY HAND.' > $files_mk
echo '# auto-generated by mkdepend. DO NOT EDIT BY HAND.' > $depend_mk

while [ "$#" -ge 2 ]; do
  obj=`depfiles -Ml "$2"`
  st=$?; test "$st" = "0" || exit $st
  echo "$1""_OBJECTS =$LF$obj" | sed '$!s,$, \\,' >> $files_mk
  ALL_OBJECTS="$ALL_OBJECTS$LF$obj"
  case "$1" in
    *_LIB)
      src=`depfiles -M "$2"`
      st=$?; test "$st" = "0" || exit $st
      INSTALL_FILES_SRC="$INSTALL_FILES_SRC$LF$src"
      INSTALL_FILES_OBJ="$INSTALL_FILES_OBJ$LF$obj"
    ;;
  esac
  shift 2
done

print_bind INSTALL_FILES_SRC
print_bind INSTALL_FILES_OBJ
print_bind ALL_OBJECTS

for i in `echo "$ALL_OBJECTS" | sed 's,\.'"$OBJEXT"'$,,'`; do
  case "$i" in
    src/ml-yacc/src/yacc.lex) ;;
    src/ml-yacc/src/yacc.grm) ;;
    *.ppg)
      GEN_SOURCES="$GEN_SOURCES$LF$i.sml"
      echo "$i.sml: $i \$(SMLFORMAT_DEP)" >> $depend_mk
      ;;
    *.lex)
      GEN_SOURCES="$GEN_SOURCES$LF$i.sml"
      echo "$i.sml: $i \$(MLLEX_DEP)" >> $depend_mk
      ;;
    *.grm)
      GEN_SOURCES="$GEN_SOURCES$LF$i.sml"
      CLEAN_FILES="$CLEAN_FILES$LF$i.sml.desc"
      echo "$i.sml: $i \$(MLYACC_DEP)" >> $depend_mk
      ;;
  esac
  echo $SMLSHARP -Bsrc -nostdpath -M "$i.sml" 1>&2
  tmp=`$SMLSHARP -Bsrc -nostdpath -M "$i.sml"`
  st=$?; test "$st" = "0" || exit $st
  echo "$tmp" | sed 's, *\\*$, \\,' >> $depend_mk
  echo ' $(SMLSHARP_DEP)' >> $depend_mk
done

print_bind GEN_SOURCES
print_bind CLEAN_FILES
