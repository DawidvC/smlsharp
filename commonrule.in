# -*- Makefile -*-
#
# commonrules
# $Id: commonrule.in,v 1.7.4.2 2007/03/24 14:51:07 katsu Exp $
#

SHELL = @SHELL@
@SET_MAKE@

exec_prefix = @exec_prefix@
prefix = @prefix@
bindir = @bindir@
datadir = @datadir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
DESTDIR =

libdir_smlsharp = $(libdir)/smlsharp
heapdir = $(libdir_smlsharp)/heap

CONFIG_FILES = @CONFIG_FILES@

CC = @CC@
CFLAGS = @CFLAGS@
CXX = @CXX@
CXXFLAGS = @CXXFLAGS@
DEFS = @DEFS@
CPPFLAGS_ORIG = @CPPFLAGS@
CPPFLAGS = @CPPFLAGS@ \
           -I$(top_builddir)/. \
           -I$(RUNTIME_CORE_SRCDIR)/main \
           -I$(RUNTIME_IMPL_SRCDIR)/main \
           -I$(PRIMITIVES_SRCDIR)/runtime/main \
           -I$(INSTRUCTIONS_SRCDIR)/runtime/main \
           $(LOCAL_CPPFLAGS) -I.
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
LIBOBJS = @LIBOBJS@
STUBLIBS = @STUBLIBS@

target = @target@
target_cpu = @target_cpu@
target_vendor = @target_vendor@
target_os = @target_os@
BYTE_ORDER = @BYTE_ORDER@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
LIBEXT = @LIBEXT@
DLEXT = @DLEXT@
DLSTUBEXT = @DLSTUBEXT@

AUTOCONF = autoconf
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_DATA = @INSTALL_DATA@
FIND = @FIND@
RANLIB = @RANLIB@
AR = @AR@
LD = @LD@
DLLTOOL = @DLLTOOL@
WINDRES = @WINDRES@
CYGPATH = @CYGPATH@
DOXYGEN = @DOXYGEN@
EGREP = @EGREP@

SMLNJ_VERSION = @SMLNJ_VERSION@
SML = @SML@
SMLCM = @SMLCM@
SML_HEAP_SUFFIX = @SML_HEAP_SUFFIX@
MLTON = @MLTON@
MLTON_FLAGS = @MLTON_FLAGS@
MLTON_LEX = @MLTON_LEX@
MLTON_YACC = @MLTON_YACC@
SMLFORMATDIR = @SMLFORMATDIR@
SMLFORMAT = @SMLFORMAT@
SMLDOCDIR = @SMLDOCDIR@
SMLDOC = @SMLDOC@
SMLUNITDIR = @SMLUNITDIR@
BASISDIR = @BASISDIR@
INSTALL_HEAP = $(INSTALL_DATA)

JDKLIBPATH = @JDKLIBPATH@
FFI_STUB = @FFI_STUB@
LIBFFI_BUILD = @LIBFFI_BUILD@
RESOURCE_TYPE = @RESOURCE_TYPE@
FFI_MAX_ARGS = @FFI_MAX_ARGS@

BUILD_ROOT = @abs_top_builddir@
SRC_ROOT = @abs_top_srcdir@
RUNTIME_CORE_SRCDIR = $(top_srcdir)/src/runtime/runtime-core
RUNTIME_IMPL_SRCDIR = $(top_srcdir)/src/runtime/runtime-impl
PRIMITIVES_SRCDIR   = $(top_srcdir)/src/primitives
INSTRUCTIONS_SRCDIR = $(top_srcdir)/src/instructions
SMLSHARP = $(top_builddir)src/compiler/smlsharp_build$(BATEXT)
LIBSMLSHARP_O = $(top_builddir)src/runtime/byterun/main/libsmlsharp.$(OBJEXT)

MKSMLPATH = $(SHELL) $(top_builddir)mksmlpath


.SUFFIXES:
.SUFFIXES: .c .cc .hh .@OBJEXT@ .@LIBEXT@ .@DLLIBEXT@ @EXEEXT@ \
           .sml .ppg .ppg.sml

# ---- operational rules ----

all: Makefile $(top_builddir)commonrule all-subdirs PHONY

config: PHONY

doc: doc-subdirs PHONY

clean: clean-subdirs PHONY

distclean: distclean-subdirs clean PHONY

install: install-subdirs PHONY

test: test-subdirs PHONY

depend: depend-subdirs PHONY

PHONY: #force

# ---- subrules ----

# FIXME: "Nothing to be done" is never printed due to these rules.

SUBMAKE=exec $(MAKE)

all-subdirs: config PHONY
	@for i in $(SUBDIRS)''; \
	do test -z "$$i" || (cd $$i && $(SUBMAKE) all) || exit $$?; done

doc-subdirs: PHONY
	@for i in $(SUBDIRS)''; \
	do test -z "$$i" || (cd $$i && $(SUBMAKE) doc) || exit $$?; done

clean-subdirs: PHONY
	@for i in $(SUBDIRS)''; \
	do test -z "$$i" || (cd $$i && $(SUBMAKE) clean) || exit $$?; done

distclean-subdirs: PHONY
	@for i in $(SUBDIRS)''; \
	do test -z "$$i" || (cd $$i && $(SUBMAKE) distclean) || exit $$?; done

install-subdirs: PHONY
	@for i in $(SUBDIRS)''; \
	do test -z "$$i" || (cd $$i && $(SUBMAKE) install) || exit $$?; done

test-subdirs: PHONY
	@for i in $(SUBDIRS)''; \
	do test -z "$$i" || (cd $$i && $(SUBMAKE) test) || exit $$?; done

depend-subdirs: PHONY
	@for i in $(SUBDIRS)''; \
	do test -z "$$i" || (cd $$i && $(SUBMAKE) depend) || exit $$?; done

# ---- reconstruction of Makefiles ----

Makefile: $(srcdir)/Makefile.in $(top_builddir)config.status
	cd $(top_builddir). && $(SHELL) ./config.status
	@echo 'Makefiles are updated, rerun make.'
	@test 'x$(GNUMAKE)' = 'xYES'
	@echo 'This is GNU Make; Makefiles are automatically reloaded.'

$(top_builddir)commonrule: $(top_srcdir)/commonrule.in \
                           $(top_builddir)config.status
	cd $(top_builddir). && $(SHELL) ./config.status commonrule
	@echo 'Makefiles are updated, rerun make.'
	@test 'x$(GNUMAKE)' = 'xYES'
	@echo 'This is GNU Make; Makefiles are automatically reloaded.'

$(top_builddir)config.h: $(top_builddir)config.status
	cd $(top_builddir). && $(SHELL) ./config.status config.h

$(top_builddir)config.status: $(top_srcdir)/configure
	cd $(top_builddir). && \
	CC='$(CC)' \
	CXX='$(CXX)' \
	CFLAGS='$(CFLAGS)' \
	CXXFLAGS='$(CXXFLAGS)' \
	CPPFLAGS='$(CPPFLAGS_ORIG)' \
	LDFLAGS='$(LDFLAGS)' \
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: $(top_srcdir)/configure.ac
	cd $(top_srcdir) && $(AUTOCONF)

# ---- automatic dependency generation ----

depend:
	@$(MAKE) mkdepend 

# NOTE: assume that CXX is g++.
mkdepend: Makefile.in $(top_builddir)commonrule $(SOURCES) $(SOURCES_DEPEND)
	@if grep '^##---- depend' $(srcdir)/Makefile.in > /dev/null 2>&1; then\
	  set -e; \
	  sources='$(SOURCES_DEPEND)'; \
	  gen='.'; \
	  test -z "$$sources" && sources='$(SOURCES)'; \
	  sed -e '/^##---- depend/q' ./Makefile.in > $@; \
	  for i in $$sources; do \
	    eval ' \
	      case "$$i" in \
	      '$$gen') ;; \
	      *.cc) \
	        gen="$$gen|$$i"; \
	        echo $(CXX) -E -MM $(DEFS) $(CPPFLAGS) $(srcdir)/$$i; \
	        $(CXX) -E -MM $(DEFS) $(CPPFLAGS) $(srcdir)/$$i \
	        | sed -e "s,//,/,g" -e "s,\.$(OBJEXT):,.\$$(OBJEXT):," >> $@;; \
	      esac'; \
	  done; \
	  mv -f $@ $(srcdir)/Makefile.in; \
	fi

# ---- implicit rules ----

.c.@OBJEXT@:
	$(CC) $(CFLAGS) $(DEFS) $(CPPFLAGS) -c -o $@ $<

.cc.@OBJEXT@:
	$(CXX) $(CXXFLAGS) $(DEFS) $(CPPFLAGS) -c -o $@ $<

.ppg.ppg.sml:
	$(SMLFORMAT) $<
