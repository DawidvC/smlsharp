
              SML# - a new language in the ML family

           http://www.pllab.riec.tohoku.ac.jp/smlsharp/

1. Overview

SML# is a new generation of the Standard ML family of programming
languages being developed at Research Institute of Electrical
Communication, Tohoku University. Its design goal is to provide a
moderate but practically important extensions based on recent advance
in type theory for ML-style languages while maintaining the
compatibility of the Definition of Standard ML.

The main features of SML# include the following.

 * interoperability
   Our newly developed memory management method makes SML# program
   highly interoperable with C and Java. For example, SML# program
   can dynamically load a C function and passes an array of floating
   point numbers without any data conversion.

 * record polymorphism
   The type system of SML# fully supports record polymorphism.
   Moreover, its type directed compiler generates efficient code for
   polymorphic record operations.

 * extension of the Definition of Standard ML
   SML# is a conservative extension of the Definition of Standard
   ML. It support the full set of the language and the required set
   of the Standard ML Basis Library. The programmer can enjoy the
   new features with a rich collection of existing library for
   Standard ML.

The version 0.40 has the following limitations.

 * Native code generation supports only x86 Linux and Intel-based
   Mac OS X. For other platforms, it only provides bytecode
   interpreter.
 * Interoperability is limited to C through dynamically linked
   library.
 * Optimization is under development.

We plan to complete and release a version 1.00 that eliminates these
limitation in the future.

The SML# project has been supported by Japanese Ministry of Education,
Culture, Sports, Science and Technologies (MEXT) through the MEXT
e-Society project under the title: ``dependable software development
technology based on static program analysis.''

2. License

The SML# Compiler and its supporting tools are open source softwares
being distributed under a (revised) BSD-style license, as described
in the file "LICENSE" included in this distribution package.

2.1 Other source code used and/or included

The SML# source package contains the following source code of the
Standard ML of New Jersey compiler and MLton. (Their license terms
and copyright notices can be found in the file SMLNJ_LICENSE and
MLton_LICENSE, respectively):

 * the utility library (smlnj-lib) of Standard ML of New Jersey
 * some of the Standard ML basis library (some of them with
   modification) as part of the SML# source code.
 * some of MLton compiler code as part of the SML# supporting tools.

The SML# source package also contains the following source code
distributed with the Standard ML of New Jersey compiler:

 * benchmark programs
 * ml-yacc interface files
 * ml-lex interface files

3. This Package

This source distribution contains the version 0.40 SML# compiler and
its spooring tools, including the following:

 * SMLSharp/README  - this file
 * SMLSharp/INSTALL - install information
 * SMLSharp/LICENSE - a BSD style license
 * SMLSharp/src - the source directory
 * SMLDoc -  a document generation tool
 * SMLFormat - a pretty printer generator
 * SMLUnit - a unit test tool

4. Documentations

The SML# web page (http://www.pllab.riec.tohoku.ac.jp/smlsharp/)
contains some documentations on the compiler, its new features and its
supporting tools. A more comprehensive documents are under preparation.

5. Contact information and mailing list

The contact address of the SML# development team is

  smlsharp @ pllab . riec . tohoku . ac . jp

We have set up a mailing list for general discussions on the SML#
language, the compiler and its supporting tools:

  smlsharp-list @ pllab . riec . tohoku . ac . jp

For more detail. visit the "Contact Us" page of the SML# web.
