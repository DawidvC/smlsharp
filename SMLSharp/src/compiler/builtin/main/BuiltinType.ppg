(* -*- sml -*- *)
(**
 * built-in types.
 * @copyright (c) 2011, Tohoku University.
 * @author UENO Katsuhiro
 *)
structure BuiltinType =
struct

  (*% *)
  datatype ty =
      (* @format "int" *)
      INTty
    | (* @format "word" *)
      WORDty
    | (* @format "Word8_word" *)
      WORD8ty
    | (* @format "char" *)
      CHARty
    | (* @format "string" *)
      STRINGty
    | (* @format "real" *)
      REALty
    | (* @format "Real32_real" *)
      REAL32ty
    | (* @format "unit" *)
      UNITty
    | (* @format "ptr" *)
      PTRty      (* 'a ptr *)
    | (* @format "array" *)
      ARRAYty    (* 'a array *)
    | (* @format "exn" *)
      EXNty
    | (* @format "IntInf_int" *)
      INTINFty   (* ToDo: is this really needed to be a built-in type? *)
    | (* @format "boxed" *)
      BOXEDty    (* pointer to some ML object *)
    | (* @format "exntag" *)
      EXNTAGty    (* the type of x in exception E = x *)

  (* for unification *)
  fun equalTy (ty1:ty, ty2:ty) = ty1 = ty2

  fun isAdmitEquality ty =
      case ty of
        INTty => true
      | WORDty => true
      | WORD8ty => true
      | CHARty => true
      | STRINGty => true
      | REALty => false
      | REAL32ty => false
      | UNITty => true
      | PTRty => true
      | ARRAYty => true
      | EXNty => false
      | INTINFty => true
      | BOXEDty => false
      | EXNTAGty => false

  fun arity ty =
      case ty of
        INTty => 0
      | WORDty => 0
      | WORD8ty => 0
      | CHARty => 0
      | STRINGty => 0
      | REALty => 0
      | REAL32ty => 0
      | UNITty => 0
      | PTRty => 1
      | ARRAYty => 1
      | EXNty => 0
      | INTINFty => 0
      | BOXEDty => 0
      | EXNTAGty => 0

  fun findType name =
      case name of
        "int" => SOME INTty
      | "word" => SOME WORDty
      | "Word8_word" => SOME WORD8ty
      | "char" => SOME CHARty
      | "string" => SOME STRINGty
      | "real" => SOME REALty
      | "Real32_real" => SOME REAL32ty
      | "unit" => SOME UNITty
      | "ptr" => SOME PTRty
      | "array" => SOME ARRAYty
      | "exn" => SOME EXNty
      | "IntInf_int" => SOME INTINFty
      | "boxed" => SOME BOXEDty
   (* | "exntag" => SOME EXNTAGty *)  (* for internal use only *)
      | _ => NONE

end
