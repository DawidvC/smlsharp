(* -*- sml -*- *)
(**
 * Binary object file.
 * @copyright (c) 2007, Tohoku University.
 * @author UENO Katsuhiro
 * @version $Id: ObjectFile.ppg,v 1.2 2007/12/17 12:11:15 katsu Exp $
 *)
structure ObjectFile =
struct

  local
    val term = SMLFormat.BasicFormatters.format_string
    fun format_asInt x = term (Word.fmt (StringCvt.DEC) x)
    fun format_asInt32 x = term (Word32.fmt (StringCvt.DEC) x)
  in

  (*% @formatter(Word32.word) SmlppgUtil.format_word32 *)
  type offset =
       (*% @format(x) "0x" x *)
       Word32.word            (* offset in an section *)

  (*% *)
  datatype symbolValue =
      UNDEF                    (* undefined *)
    | TEXT of offset           (* defined in text section *)
    | DATA of offset           (* defined in data section *)
    | BSS of offset            (* defined in bss section *)
    | BBSS of offset           (* defined in bbss section *)

  (*% *)
  datatype symbolName =
      GLOBAL of string         (* global symbol *)
    | LOCAL of string          (* local symbol *)

  (*% *)
  type symbol =
      (*%
       * @format({name, value})
       * name + ":" + value
       *)
      {
        name: symbolName,
        value: symbolValue
      }

  (*% *)
  datatype relocationType =
      ABS32

  (*%
   * @formatter(asInt) format_asInt
   * @formatter(asInt32) format_asInt32
   *)
  type relocation =
      (*%
       * @format({offset, symbolIndex, ty})
       * offset ":" + symbolIndex:asInt32 "," + ty
       *)
      (*
       * NOTE: symbolIndex in BinaryObjectFile is 0-origin, but
       *       symbol index in ELF format is 1-origin.
       *       According to ELF specification, symbol 0 is reserved for
       *       "undefined" symbol.
       *)
      {
        offset: offset,
        ty: relocationType,
        symbolIndex: offset
      }

  (*%
   * @formatter(hexdump) Hexdump.hexdumpList
   * @formatter(asInt) format_asInt32
   *)
  type section =
      (*%
       * @format({content, relocation: rel rels, alignment})
       * "alignment=" alignment
       * +1 "content:" 2[ +1 content:hexdump ]
       * +1 "relocation:" 2[ +1 rels(rel)(+1) ]
       *)
      {
       (*
        * NOTE: Word8Array.array list is used instead of Word8Array.array
        *       because of:
        *       - convenience for concatinating two arrays, and
        *       - runaround of limitation of array size.
        *)
        content: Word8Array.array list,
        relocation: relocation list,
        alignment: offset
      }

  (*% @formatter(offset) format_asInt32 *)
  type nobitsSection =
      (*%
       * @format({size, alignment})
       * "size=" size "," + "align=" alignment
       *)
      {
        size: offset,
        alignment: offset
      }

  (*% *)
  type objectFile =
      (*%
       * @format({init, text, data, bss, bbss, symbols: sym syms})
       *
       * "init:" 2[ +1 init ]
       * +1 "text:" 2[ +1 text ]
       * +1 "data:" 2[ +1 data ]
       * +1 "bss:" + bss
       * +1 "bbss:" + bbss
       * +1 "Symbols:" 2[ +1 syms(sym)(+1) ]
       *)
      {
        init: section,
        text: section,
        data: section,
        bss: nobitsSection,
        bbss: nobitsSection,
        (* constraint of ELF format:
         * all symbols with LOCAL binding must precede the symbols with
         * any other bindings. *)
        symbols: symbol list
      }

  end
end
