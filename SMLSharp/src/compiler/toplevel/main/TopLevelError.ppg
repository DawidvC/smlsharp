(**
 * @copyright (c) 2006, Tohoku University.
 * @author YAMATODANI Kiyoshi
 * @version $Id: TopLevelError.ppg,v 1.10 2008/08/04 13:25:37 bochao Exp $
 *)
structure TopLevelError =
struct

  structure UE = UserError
  (***************************************************************************)
  
  
  (*%
   * @formatter(Namespace.namespace) Namespace.format_namespace
   *)
  exception

  (**
   *)
  (*%
   * @format(message) message
   *)
  InvalidPath of string


  val errorQueue = UE.createQueue ()
  val isAnyError = ref false
  fun initializeCompilationError () = 
      (UE.clearQueue errorQueue; isAnyError := false)
  fun getErrorsAndWarnings () = UE.getErrorsAndWarnings errorQueue
  fun getErrors () = UE.getErrors errorQueue
  fun isError () = !isAnyError
  fun getWarnings () = UE.getWarnings errorQueue
  fun enqueueError x = (isAnyError := true; UE.enqueueError errorQueue x)
  val enqueueWarning = UE.enqueueWarning errorQueue

end
