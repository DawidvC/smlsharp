(**
 * helper module for wrapper modules which are generated by 'java2sml' command
 * to access Java objects.
 * @copyright (c) 2007, Tohoku University.
 * @author YAMATODANI Kiyoshi
 * @version $Id: JAVA_CLASS_HELPER.sig,v 1.10 2010/04/25 11:54:55 kiyoshiy Exp $
 *)
signature JAVA_CLASS_HELPER =
sig

  type ('jnitype, 'mltype) t
  datatype ('members, 'classes) instance =
           Instance of 'members * JavaValue.Object
  type 't method
  type 't static_method
  type 't get_field
  type 't set_field
  type 't get_static_field
  type 't set_static_field

  exception ClassCastException
  exception JavaException of JavaValue.Object

  val Z : (JNITypes.jboolean, JavaValue.boolean) t
  val B : (JNITypes.jbyte, JavaValue.byte) t
  val C : (JNITypes.jchar, JavaValue.char) t
  val S : (JNITypes.jshort, JavaValue.short) t
  val I : (JNITypes.jint, JavaValue.int) t
  val J : (JNITypes.jlong, JavaValue.long) t
  val F : (JNITypes.jfloat, JavaValue.float) t
  val D : (JNITypes.jdouble, JavaValue.double) t
  val L : (JNITypes.jobject, JavaValue.Object) t
  val T : (JNITypes.jstring, JavaValue.String) t
  val V : (void, void) t

  val argZ : JavaValue.boolean -> (JNITypes.jvalue * (unit -> unit))
  val argB : JavaValue.byte -> (JNITypes.jvalue * (unit -> unit))
  val argC : JavaValue.char -> (JNITypes.jvalue * (unit -> unit))
  val argS : JavaValue.short -> (JNITypes.jvalue * (unit -> unit))
  val argI : JavaValue.int -> (JNITypes.jvalue * (unit -> unit))
  val argJ : JavaValue.long -> (JNITypes.jvalue * (unit -> unit))
  val argF : JavaValue.float -> (JNITypes.jvalue * (unit -> unit))
  val argD : JavaValue.double -> (JNITypes.jvalue * (unit -> unit))
  val argL : JavaValue.Object -> (JNITypes.jvalue * (unit -> unit))
  val argT : JavaValue.String -> (JNITypes.jvalue * (unit -> unit))

  val methodZ : JNITypes.jmethodID -> JavaValue.boolean method
  val methodB : JNITypes.jmethodID -> JavaValue.byte method
  val methodC : JNITypes.jmethodID -> JavaValue.char method
  val methodS : JNITypes.jmethodID -> JavaValue.short method
  val methodI : JNITypes.jmethodID -> JavaValue.int method
  val methodJ : JNITypes.jmethodID -> JavaValue.long method
  val methodF : JNITypes.jmethodID -> JavaValue.float method
  val methodD : JNITypes.jmethodID -> JavaValue.double method
  val methodL : JNITypes.jmethodID -> JavaValue.Object method
  val methodT : JNITypes.jmethodID -> JavaValue.String method
  val methodV : JNITypes.jmethodID -> void method

  val static_methodZ : JNITypes.jmethodID -> JavaValue.boolean static_method
  val static_methodB : JNITypes.jmethodID -> JavaValue.byte static_method
  val static_methodC : JNITypes.jmethodID -> JavaValue.char static_method
  val static_methodS : JNITypes.jmethodID -> JavaValue.short static_method
  val static_methodI : JNITypes.jmethodID -> JavaValue.int static_method
  val static_methodJ : JNITypes.jmethodID -> JavaValue.long static_method
  val static_methodF : JNITypes.jmethodID -> JavaValue.float static_method
  val static_methodD : JNITypes.jmethodID -> JavaValue.double static_method
  val static_methodL : JNITypes.jmethodID -> JavaValue.Object static_method
  val static_methodT : JNITypes.jmethodID -> JavaValue.String static_method
  val static_methodV : JNITypes.jmethodID -> void static_method

  val getFieldZ : JNITypes.jfieldID -> JavaValue.boolean get_field
  val getFieldB : JNITypes.jfieldID -> JavaValue.byte get_field
  val getFieldC : JNITypes.jfieldID -> JavaValue.char get_field
  val getFieldS : JNITypes.jfieldID -> JavaValue.short get_field
  val getFieldI : JNITypes.jfieldID -> JavaValue.int get_field
  val getFieldJ : JNITypes.jfieldID -> JavaValue.long get_field
  val getFieldF : JNITypes.jfieldID -> JavaValue.float get_field
  val getFieldD : JNITypes.jfieldID -> JavaValue.double get_field
  val getFieldL : JNITypes.jfieldID -> JavaValue.Object get_field
  val getFieldT : JNITypes.jfieldID -> JavaValue.String get_field

  val setFieldZ : JNITypes.jfieldID -> JavaValue.boolean set_field
  val setFieldB : JNITypes.jfieldID -> JavaValue.byte set_field
  val setFieldC : JNITypes.jfieldID -> JavaValue.char set_field
  val setFieldS : JNITypes.jfieldID -> JavaValue.short set_field
  val setFieldI : JNITypes.jfieldID -> JavaValue.int set_field
  val setFieldJ : JNITypes.jfieldID -> JavaValue.long set_field
  val setFieldF : JNITypes.jfieldID -> JavaValue.float set_field
  val setFieldD : JNITypes.jfieldID -> JavaValue.double set_field
  val setFieldL : JNITypes.jfieldID -> JavaValue.Object set_field
  val setFieldT : JNITypes.jfieldID -> JavaValue.String set_field

  val getStaticFieldZ : JNITypes.jfieldID -> JavaValue.boolean get_static_field
  val getStaticFieldB : JNITypes.jfieldID -> JavaValue.byte get_static_field
  val getStaticFieldC : JNITypes.jfieldID -> JavaValue.char get_static_field
  val getStaticFieldS : JNITypes.jfieldID -> JavaValue.short get_static_field
  val getStaticFieldI : JNITypes.jfieldID -> JavaValue.int get_static_field
  val getStaticFieldJ : JNITypes.jfieldID -> JavaValue.long get_static_field
  val getStaticFieldF : JNITypes.jfieldID -> JavaValue.float get_static_field
  val getStaticFieldD : JNITypes.jfieldID -> JavaValue.double get_static_field
  val getStaticFieldL : JNITypes.jfieldID -> JavaValue.Object get_static_field
  val getStaticFieldT : JNITypes.jfieldID -> JavaValue.String get_static_field

  val setStaticFieldZ : JNITypes.jfieldID -> JavaValue.boolean set_static_field
  val setStaticFieldB : JNITypes.jfieldID -> JavaValue.byte set_static_field
  val setStaticFieldC : JNITypes.jfieldID -> JavaValue.char set_static_field
  val setStaticFieldS : JNITypes.jfieldID -> JavaValue.short set_static_field
  val setStaticFieldI : JNITypes.jfieldID -> JavaValue.int set_static_field
  val setStaticFieldJ : JNITypes.jfieldID -> JavaValue.long set_static_field
  val setStaticFieldF : JNITypes.jfieldID -> JavaValue.float set_static_field
  val setStaticFieldD : JNITypes.jfieldID -> JavaValue.double set_static_field
  val setStaticFieldL : JNITypes.jfieldID -> JavaValue.Object set_static_field
  val setStaticFieldT : JNITypes.jfieldID -> JavaValue.String set_static_field

  val newInstance
      : JavaValue.Class
        -> 'VTBL
        -> JNITypes.jmethodID
        -> (JNITypes.jvalue * (unit -> unit)) list
        -> ('VTBL, 'classes) instance
  val isInstance : JavaValue.Class -> JavaValue.Object -> bool
  val cast
      : JavaValue.Class
        -> 'VTBL
        -> JavaValue.Object
        -> ('VTBL, 'classes) instance
  val referenceOf : ('VTBL, 'classes) instance -> JavaValue.Object
  val call
      : ('VTBL, 'classes) instance
        -> ('VTBL -> JavaValue.Object -> ('arg -> 'result))
        -> ('arg -> 'result)
  val initClass
      : string
        * JavaValue.Class ref
        * (JNITypes.jmethodID ref * string * string) list
        * (JNITypes.jmethodID ref * string * string) list
        * (JNITypes.jfieldID ref * string * string) list
        * (JNITypes.jfieldID ref * string * string) list
        -> unit

end
