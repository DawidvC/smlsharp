srcdir = @srcdir@
builddir = @builddir@
top_srcdir = @top_srcdir@
top_builddir = @top_builddir@

include @top_builddir@/commonrule

VPATH = @srcdir@

TARGETS = mlb2use

SOURCES = \
	$(srcdir)/FILE.sig \
	$(srcdir)/File.sml \
	$(srcdir)/MLB2Use.sml \
	$(srcdir)/MLBParser.sml \
	$(srcdir)/PathMap.sml \
	$(srcdir)/SOURCE.sig \
	$(srcdir)/SOURCE_POS.sig \
	$(srcdir)/Source.sml \
	$(srcdir)/SourcePos.sml \
	$(srcdir)/basis_compatible.sml \
	$(srcdir)/main.sml \
	$(srcdir)/mlb.grm \
	$(srcdir)/mlb.lex \
	$(srcdir)/sources.cm \
	$(srcdir)/sources.use \
	$(srcdir)/smlnjcm/CM.grm \
	$(srcdir)/smlnjcm/CM.lex \
	$(srcdir)/smlnjcm/CMFILE_PARSER.sig \
	$(srcdir)/smlnjcm/CMFileParser.sml \
	$(srcdir)/smlnjcm/CMSemantic.sml \
	$(srcdir)/smlnjcm/FileID.sml \
	$(srcdir)/smlnjcm/ParserUtil.sml \
	$(srcdir)/smlnjcm/SourcePath.sml \


LEXFILES =  \
	$(srcdir)/mlb.lex \
	$(srcdir)/smlnjcm/CM.lex \


YACCFILES = \
	$(srcdir)/mlb.grm \
	$(srcdir)/smlnjcm/CM.grm \


# We assume that mllex and mlyacc of MLton are used to generate sources.
# User should specify MLLEX and MLYACC for make command if necessary.
#  $ make MLLEX=mllex MLYACC=mlyacc
GENSOURCES = \
	$(LEXFILES:.lex=.lex.sml) \
	$(YACCFILES:.grm=.grm.sml) \
	$(YACCFILES:.grm=.grm.sig) \
	$(YACCFILES:.grm=.grm.desc) \


GENFILES = \
	$(GENSOURCES) \
	smlsharp-path-map.txt \
	smlsharp.use \
	smlsharp.sme \


all: $(TARGETS)

clean:
	-rm -f $(TARGETS) $(GENFILES)

install: $(TARGETS)
	$(INSTALL) -m 755 -d '$(DESTDIR)$(bindir)'
	$(INSTALL_PROGRAM) $(TARGETS) '$(DESTDIR)$(bindir)'

mlb2use: $(SOURCES) $(GENSOURCES)
	$(MLTON) -output $@ $(srcdir)/sources.cm
#	$(SMLSHARP) -c -o $@ $(srcdir)/sources.use

###############################################################################
# self-compiling SML#

smlsharp-path-map.txt:
	-rm -f $@
	echo "SML_LIB \$${SML_LIB}" >> $@
	echo "CONFIGDIR `$(MKSMLPATH) -sh '$(SRC_ROOT)/src/configuration'`" >> $@
	if test "x$(BYTE_ORDER)" = "xLittle"; then \
	  echo 'ARCH x86' >> $@; \
	else \
	  echo 'ARCH Sparc' >> $@; \
	fi
	echo "BYTE_ORDER ${BYTE_ORDER}" >> $@
	echo "MLCOMPILER SMLSharp" >> $@

smlsharp.use: mlb2use
	-rm -f $@
	echo 'use "smlnj-lib.sml";' >> $@
	echo 'use "ml-yacc-lib.sml";' >> $@
	./mlb2use \
	        -d . \
		-e \
	        -p ./smlsharp-path-map.txt \
		$(top_srcdir)/src/compiler/commands/smlsharp/main/sources.mlb \
		>> smlsharp.use

mlton_parser_g:
	$(MAKE) -C ../../compiler/ mlton_parser_g

smlsharp.sme: 	mlb2use \
		smlsharp-path-map.txt \
		smlsharp.use \
		mlton_parser_g
	IML_skipPrinter=yes \
	IML_switchTrace=yes \
	IML_traceFileLoad=yes \
	$(SMLSHARP) \
		-o smlsharp.sme \
		-c \
		./smlsharp.use

self-compile: smlsharp.sme

###############################################################################
