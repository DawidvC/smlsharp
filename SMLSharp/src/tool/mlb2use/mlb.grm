(* Copyright (C) 1999-2005 Henry Cejtin, Matthew Fluet, Suresh
 *    Jagannathan, and Stephen Weeks.
 * Copyright (C) 1997-2000 NEC Research Institute.
 *
 * MLton is released under a BSD-style license.
 * See the file MLton-LICENSE for details.
 *)

type file = string

%%

%term
      ID of string | COMMA | SEMICOLON | EOF
    | AND | BAS | BASIS | END | EQUALOP | FUNCTOR | IN | LET 
    | LOCAL | OPEN | SIGNATURE | STRUCTURE
    | ANN | PRIM | FILE of string | STRING of string

%nonterm
         ann of unit
       | annPlus of unit
       | annStar of unit
       | basbinds of unit
       | basbinds' of unit
       | basbinds'' of unit
       | basdec of file list
       | basdecnode of file list
       | basdecs of file list
       | basdecsnode of file list
       | basexp of unit
       | basexpnode of unit
       | basid of unit
       | basids of unit
       | fctbinds of unit
       | fctbinds' of unit
       | fctbinds'' of unit
       | fctid of unit
       | id of unit
       | mlb of file list
       | sigbinds of unit
       | sigbinds' of unit
       | sigbinds'' of unit
       | sigid of unit
       | strbinds of unit
       | strbinds' of unit
       | strbinds'' of unit
       | strid of unit

%verbose
%pos SourcePos.t
%eop EOF
%noshift EOF

%right AND

%name MLB

%keyword AND BAS BASIS END FUNCTOR IN LET LOCAL OPEN SIGNATURE STRUCTURE ANN PRIM

%change -> SEMICOLON | -> IN ID END

%value ID ("bogus")

%%

mlb : basdecs (basdecs)

basdecs : basdecsnode (basdecsnode)

basdecsnode :                    ([])
            | SEMICOLON basdecs  (basdecs)
            | basdec basdecs     (basdec @ basdecs)

basdec : basdecnode (basdecnode)

basdecnode
   : FUNCTOR fctbinds ([])
   | SIGNATURE sigbinds ([])
   | STRUCTURE strbinds ([])
   | BASIS basbinds ([])
   | LOCAL basdecs IN basdecs END  (basdecs1 @ basdecs2)
   | OPEN basids  ([])
   | FILE ([FILE])
   | STRING ([STRING])
   | PRIM ([])
   | ANN annPlus IN basdecs END  (basdecs)

fctbinds : fctid EQUALOP fctbinds' ()
         | fctid fctbinds'' ()

fctbinds' : fctid fctbinds''  ()

fctbinds'' :               ()
           | AND fctbinds  ()

sigbinds : sigid EQUALOP sigbinds' ()
         | sigid sigbinds'' ()

sigbinds' : sigid sigbinds''  ()

sigbinds'' :               ()
           | AND sigbinds  ()

strbinds : strid EQUALOP strbinds' ()
         | strid strbinds'' ()

strbinds' : strid strbinds''  ()

strbinds'' :               ()
           | AND strbinds  ()

basbinds : basid EQUALOP basbinds' ()

basbinds' : basexp basbinds''  ()

basbinds'' :               ()
           | AND basbinds  ()

basexp : basexpnode ()

basexpnode : BAS basdecs END           ()
           | basid                     ()
           | LET basdec IN basexp END  ()

basid : id  ()
basids : basid ()
       | basid basids ()
fctid : id  ()
sigid : id  ()
strid : id  ()
id : ID     ()


ann : STRING  ()

annPlus : ann annStar ()

annStar :          ()
        | annPlus  ()
