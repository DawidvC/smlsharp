structure Utility{
 val interleave
 val interleaveString
 val isPrefixOf
 val splitLast
 val sort
 val uniq
 val satisfyAny
 val satisfyAll
 val compareStringNoCase
 val tokenizeString
 val replaceString
 val replaceStringByTable
 val replaceFile
 exception MissingEscapedChar
}
structure PathUtility{
 val trPath
 val isAbsolute
 val makeAbsolute
 val collectFilesInDir
 val splitDirFile
 val joinDirFile
 val splitBaseExt
 val joinBaseExt
}
structure ParserUtil{
 structure PositionMap{
  type pos
  type operations
  val posToLocation
  val makeMessage
  val onNewLine
  val create
 }
}
structure DocumentGenerationParameter{
 type parameter
 val warn
 val error
 val onProgress
}
structure Ast{
 type fixity
 type srcpos
 type region
 type path
 type tyvar
 type sigConst
 type exp
 type rule
 type pat
 type strexp
 type fctexp
 type wherespec
 type sigexp
 type fsigexp
 type spec
 type dec
 type vb
 type rvb
 type fb
 type clause
 type tb
 type db
 type dbrhs
 type eb
 type strb
 type fctb
 type sigb
 type fsigb
 type ty
 type tyrow
}
structure AstUtil{
 type fixity => structure Ast
 type srcpos => structure Ast
 type region => structure Ast
 type path => structure Ast
 type tyvar => structure Ast
 type sigConst => structure Ast
 type exp => structure Ast
 type rule => structure Ast
 type pat => structure Ast
 type strexp => structure Ast
 type fctexp => structure Ast
 type wherespec => structure Ast
 type sigexp => structure Ast
 type fsigexp => structure Ast
 type spec => structure Ast
 type dec => structure Ast
 type vb => structure Ast
 type rvb => structure Ast
 type fb => structure Ast
 type clause => structure Ast
 type tb => structure Ast
 type db => structure Ast
 type dbrhs => structure Ast
 type eb => structure Ast
 type strb => structure Ast
 type fctb => structure Ast
 type sigb => structure Ast
 type fsigb => structure Ast
 type ty => structure Ast
 type tyrow => structure Ast
 val unitPat
 val unitExp
 val trueDcon
 val falseDcon
 val quoteDcon
 val antiquoteDcon
 val arrowTycon
 val exnID
 val bogusID
 val symArg
 val itsym
 val lay3
 val lay2
 val lay
 val layered
 val makeSEQdec
 val QuoteExp
 val AntiquoteExp
}
structure DocComment{
 type id
 type paramPattern
 type tag
 type docComment
}
structure AnnotatedAst{
 type loc
 type path
 type sigConst
 type tyvar
 type optDocComment
 type strexp
 type fctexp
 type wherespec
 type sigexp
 type fsigexp
 type spec
 type dec
 type tb
 type db
 type dbrhs
 type eb
 type ty
 type compileUnit
}
structure EasyHTMLParser{
 val getBodyOfHTML
}
structure Parser{
 structure AA{
  type loc => structure AnnotatedAst
  type path => structure AnnotatedAst
  type sigConst => structure AnnotatedAst
  type tyvar => structure AnnotatedAst
  type optDocComment => structure AnnotatedAst
  type strexp => structure AnnotatedAst
  type fctexp => structure AnnotatedAst
  type wherespec => structure AnnotatedAst
  type sigexp => structure AnnotatedAst
  type fsigexp => structure AnnotatedAst
  type spec => structure AnnotatedAst
  type dec => structure AnnotatedAst
  type tb => structure AnnotatedAst
  type db => structure AnnotatedAst
  type dbrhs => structure AnnotatedAst
  type eb => structure AnnotatedAst
  type ty => structure AnnotatedAst
  type compileUnit => structure AnnotatedAst
 }
 structure DGP{
  type parameter => structure DocumentGenerationParameter
  val warn
  val error
  val onProgress
 }
 structure MLLrVals{
 }
 structure MLLexer{
 }
 structure MLParser{
 }
 structure ParamPatternLrVals{
 }
 structure ParamPatternLexer{
 }
 structure ParamPatternParser{
 }
 structure SS{
 }
 type annotationCTXframe
 type annotationContext
 type context
 val parseML
 val parseDocComment
 val isInfixInCTX
 val addFixityToCTX
 val pushCTXon
 val emptyContext
 val addInfix
 val annotate
 val parseFile
}
structure DependencyGraph{
 type graph
 val create
 val dependsOn
 val isDependsOn
 val getClosure
 val getClosureRev
 val sort
}
structure ElaboratedAst{
 type loc
 type path
 type moduleType
 type moduleFQN
 type moduleReference
 type typeReference
 type exceptionReference
 type sigConst
 type tyvar
 type strexp
 type fctexp
 type wherespec
 type sigexp
 type fsigexp
 type specSet
 type decSet
 type strb
 type fctb
 type sigb
 type fsigb
 type tb
 type db
 type vb
 type dbrhs
 type cb
 type eb
 type ty
 type paramPattern
 type tagSet
 type docComment
 type optDocComment
 type compileUnit
 val pathToString
 val moduleFQNToPath
 val moduleFQNToString
 val isFQNOfFunctorParameter
 val emptySpecSet
 val appendSpecSet
 val emptyDecSet
 val appendDecSet
}
structure DependencyAnalyzer{
 structure EA{
  type loc => structure ElaboratedAst
  type path => structure ElaboratedAst
  type moduleType => structure ElaboratedAst
  type moduleFQN => structure ElaboratedAst
  type moduleReference => structure ElaboratedAst
  type typeReference => structure ElaboratedAst
  type exceptionReference => structure ElaboratedAst
  type sigConst => structure ElaboratedAst
  type tyvar => structure ElaboratedAst
  type strexp => structure ElaboratedAst
  type fctexp => structure ElaboratedAst
  type wherespec => structure ElaboratedAst
  type sigexp => structure ElaboratedAst
  type fsigexp => structure ElaboratedAst
  type specSet => structure ElaboratedAst
  type decSet => structure ElaboratedAst
  type strb => structure ElaboratedAst
  type fctb => structure ElaboratedAst
  type sigb => structure ElaboratedAst
  type fsigb => structure ElaboratedAst
  type tb => structure ElaboratedAst
  type db => structure ElaboratedAst
  type vb => structure ElaboratedAst
  type dbrhs => structure ElaboratedAst
  type cb => structure ElaboratedAst
  type eb => structure ElaboratedAst
  type ty => structure ElaboratedAst
  type paramPattern => structure ElaboratedAst
  type tagSet => structure ElaboratedAst
  type docComment => structure ElaboratedAst
  type optDocComment => structure ElaboratedAst
  type compileUnit => structure ElaboratedAst
  val pathToString
  val moduleFQNToPath
  val moduleFQNToString
  val isFQNOfFunctorParameter
  val emptySpecSet
  val appendSpecSet
  val emptyDecSet
  val appendDecSet
 }
 structure AA{
  type loc => structure AnnotatedAst
  type path => structure AnnotatedAst
  type sigConst => structure AnnotatedAst
  type tyvar => structure AnnotatedAst
  type optDocComment => structure AnnotatedAst
  type strexp => structure AnnotatedAst
  type fctexp => structure AnnotatedAst
  type wherespec => structure AnnotatedAst
  type sigexp => structure AnnotatedAst
  type fsigexp => structure AnnotatedAst
  type spec => structure AnnotatedAst
  type dec => structure AnnotatedAst
  type tb => structure AnnotatedAst
  type db => structure AnnotatedAst
  type dbrhs => structure AnnotatedAst
  type eb => structure AnnotatedAst
  type ty => structure AnnotatedAst
  type compileUnit => structure AnnotatedAst
 }
 structure DG{
  type graph => structure DependencyGraph
  val create
  val dependsOn
  val isDependsOn
  val getClosure
  val getClosureRev
  val sort
 }
 structure DGP{
  type parameter => structure DocumentGenerationParameter
  val warn
  val error
  val onProgress
 }
 structure U{
  val interleave
  val interleaveString
  val isPrefixOf
  val splitLast
  val sort
  val uniq
  val satisfyAny
  val satisfyAll
  val compareStringNoCase
  val tokenizeString
  val replaceString
  val replaceStringByTable
  val replaceFile
  exception MissingEscapedChar
 }
 val addStructure
 val addSignature
 val addFunctor
 val addFunctorSignature
 val getDeclaredModules
 val getDependedModules
 val buildGraph
 val sort
}
structure ENVSet{
 structure AA{
  type loc => structure AnnotatedAst
  type path => structure AnnotatedAst
  type sigConst => structure AnnotatedAst
  type tyvar => structure AnnotatedAst
  type optDocComment => structure AnnotatedAst
  type strexp => structure AnnotatedAst
  type fctexp => structure AnnotatedAst
  type wherespec => structure AnnotatedAst
  type sigexp => structure AnnotatedAst
  type fsigexp => structure AnnotatedAst
  type spec => structure AnnotatedAst
  type dec => structure AnnotatedAst
  type tb => structure AnnotatedAst
  type db => structure AnnotatedAst
  type dbrhs => structure AnnotatedAst
  type eb => structure AnnotatedAst
  type ty => structure AnnotatedAst
  type compileUnit => structure AnnotatedAst
 }
 structure EA{
  type loc => structure ElaboratedAst
  type path => structure ElaboratedAst
  type moduleType => structure ElaboratedAst
  type moduleFQN => structure ElaboratedAst
  type moduleReference => structure ElaboratedAst
  type typeReference => structure ElaboratedAst
  type exceptionReference => structure ElaboratedAst
  type sigConst => structure ElaboratedAst
  type tyvar => structure ElaboratedAst
  type strexp => structure ElaboratedAst
  type fctexp => structure ElaboratedAst
  type wherespec => structure ElaboratedAst
  type sigexp => structure ElaboratedAst
  type fsigexp => structure ElaboratedAst
  type specSet => structure ElaboratedAst
  type decSet => structure ElaboratedAst
  type strb => structure ElaboratedAst
  type fctb => structure ElaboratedAst
  type sigb => structure ElaboratedAst
  type fsigb => structure ElaboratedAst
  type tb => structure ElaboratedAst
  type db => structure ElaboratedAst
  type vb => structure ElaboratedAst
  type dbrhs => structure ElaboratedAst
  type cb => structure ElaboratedAst
  type eb => structure ElaboratedAst
  type ty => structure ElaboratedAst
  type paramPattern => structure ElaboratedAst
  type tagSet => structure ElaboratedAst
  type docComment => structure ElaboratedAst
  type optDocComment => structure ElaboratedAst
  type compileUnit => structure ElaboratedAst
  val pathToString
  val moduleFQNToPath
  val moduleFQNToString
  val isFQNOfFunctorParameter
  val emptySpecSet
  val appendSpecSet
  val emptyDecSet
  val appendDecSet
 }
 type ENVSet
 val emptyENVSet
 val appendENVSet
 val bindVal
 val bindType
 val bindException
 val bindStructure
 val bindSignature
 val bindFunctor
 val bindFunctorSignature
 val bindModule
}
structure Elaborator{
 structure AA{
  type loc => structure AnnotatedAst
  type path => structure AnnotatedAst
  type sigConst => structure AnnotatedAst
  type tyvar => structure AnnotatedAst
  type optDocComment => structure AnnotatedAst
  type strexp => structure AnnotatedAst
  type fctexp => structure AnnotatedAst
  type wherespec => structure AnnotatedAst
  type sigexp => structure AnnotatedAst
  type fsigexp => structure AnnotatedAst
  type spec => structure AnnotatedAst
  type dec => structure AnnotatedAst
  type tb => structure AnnotatedAst
  type db => structure AnnotatedAst
  type dbrhs => structure AnnotatedAst
  type eb => structure AnnotatedAst
  type ty => structure AnnotatedAst
  type compileUnit => structure AnnotatedAst
 }
 structure EA{
  type loc => structure ElaboratedAst
  type path => structure ElaboratedAst
  type moduleType => structure ElaboratedAst
  type moduleFQN => structure ElaboratedAst
  type moduleReference => structure ElaboratedAst
  type typeReference => structure ElaboratedAst
  type exceptionReference => structure ElaboratedAst
  type sigConst => structure ElaboratedAst
  type tyvar => structure ElaboratedAst
  type strexp => structure ElaboratedAst
  type fctexp => structure ElaboratedAst
  type wherespec => structure ElaboratedAst
  type sigexp => structure ElaboratedAst
  type fsigexp => structure ElaboratedAst
  type specSet => structure ElaboratedAst
  type decSet => structure ElaboratedAst
  type strb => structure ElaboratedAst
  type fctb => structure ElaboratedAst
  type sigb => structure ElaboratedAst
  type fsigb => structure ElaboratedAst
  type tb => structure ElaboratedAst
  type db => structure ElaboratedAst
  type vb => structure ElaboratedAst
  type dbrhs => structure ElaboratedAst
  type cb => structure ElaboratedAst
  type eb => structure ElaboratedAst
  type ty => structure ElaboratedAst
  type paramPattern => structure ElaboratedAst
  type tagSet => structure ElaboratedAst
  type docComment => structure ElaboratedAst
  type optDocComment => structure ElaboratedAst
  type compileUnit => structure ElaboratedAst
  val pathToString
  val moduleFQNToPath
  val moduleFQNToString
  val isFQNOfFunctorParameter
  val emptySpecSet
  val appendSpecSet
  val emptyDecSet
  val appendDecSet
 }
 structure ES{
  structure AA => structure ENVSet . structure AA
  structure EA => structure ENVSet . structure EA
  type ENVSet => structure ENVSet
  val emptyENVSet
  val appendENVSet
  val bindVal
  val bindType
  val bindException
  val bindStructure
  val bindSignature
  val bindFunctor
  val bindFunctorSignature
  val bindModule
 }
 structure DC{
  type id => structure DocComment
  type paramPattern => structure DocComment
  type tag => structure DocComment
  type docComment => structure DocComment
 }
 structure DGP{
  type parameter => structure DocumentGenerationParameter
  val warn
  val error
  val onProgress
 }
 structure U{
  val interleave
  val interleaveString
  val isPrefixOf
  val splitLast
  val sort
  val uniq
  val satisfyAny
  val satisfyAll
  val compareStringNoCase
  val tokenizeString
  val replaceString
  val replaceStringByTable
  val replaceFile
  exception MissingEscapedChar
 }
 type path
 type context
 val getREFOfType
 val getREFOfException
 val getREFOfStructure
 val getREFOfSignature
 val getREFOfFunctor
 val getREFOfFunctorSignature
 val getENVSetOfStructure
 val getENVSetOfSignature
 val getENVSetOfFunctor
 val getENVSetOfFunctorSignature
 val isStructureInENV
 val isSignatureInENV
 val isFunctorInENV
 val isFunctorSignatureInENV
 val isTypeInENV
 val isExceptionInENV
 val isValInENV
 val getTypeOfValInENV
 val getStructureInENV
 val getFunctorInENV
 val bindVal
 val bindType
 val addExternalType
 val bindException
 val addExternalException
 val bindStructure
 val bindStructureOfFunctorParameter
 val addExternalStructure
 val bindSignature
 val addExternalSignature
 val bindFunctor
 val addExternalFunctor
 val bindFunctorSignature
 val addExternalFunctorSignature
 val enterModule
 val pushENVSetOnCTX
 val toHideBySig
 val elaborate
}
structure LinkFile{
 structure EA{
  type loc => structure ElaboratedAst
  type path => structure ElaboratedAst
  type moduleType => structure ElaboratedAst
  type moduleFQN => structure ElaboratedAst
  type moduleReference => structure ElaboratedAst
  type typeReference => structure ElaboratedAst
  type exceptionReference => structure ElaboratedAst
  type sigConst => structure ElaboratedAst
  type tyvar => structure ElaboratedAst
  type strexp => structure ElaboratedAst
  type fctexp => structure ElaboratedAst
  type wherespec => structure ElaboratedAst
  type sigexp => structure ElaboratedAst
  type fsigexp => structure ElaboratedAst
  type specSet => structure ElaboratedAst
  type decSet => structure ElaboratedAst
  type strb => structure ElaboratedAst
  type fctb => structure ElaboratedAst
  type sigb => structure ElaboratedAst
  type fsigb => structure ElaboratedAst
  type tb => structure ElaboratedAst
  type db => structure ElaboratedAst
  type vb => structure ElaboratedAst
  type dbrhs => structure ElaboratedAst
  type cb => structure ElaboratedAst
  type eb => structure ElaboratedAst
  type ty => structure ElaboratedAst
  type paramPattern => structure ElaboratedAst
  type tagSet => structure ElaboratedAst
  type docComment => structure ElaboratedAst
  type optDocComment => structure ElaboratedAst
  type compileUnit => structure ElaboratedAst
  val pathToString
  val moduleFQNToPath
  val moduleFQNToString
  val isFQNOfFunctorParameter
  val emptySpecSet
  val appendSpecSet
  val emptyDecSet
  val appendDecSet
 }
 type item
}
structure ExternalRefLinker{
 structure EA{
  type loc => structure ElaboratedAst
  type path => structure ElaboratedAst
  type moduleType => structure ElaboratedAst
  type moduleFQN => structure ElaboratedAst
  type moduleReference => structure ElaboratedAst
  type typeReference => structure ElaboratedAst
  type exceptionReference => structure ElaboratedAst
  type sigConst => structure ElaboratedAst
  type tyvar => structure ElaboratedAst
  type strexp => structure ElaboratedAst
  type fctexp => structure ElaboratedAst
  type wherespec => structure ElaboratedAst
  type sigexp => structure ElaboratedAst
  type fsigexp => structure ElaboratedAst
  type specSet => structure ElaboratedAst
  type decSet => structure ElaboratedAst
  type strb => structure ElaboratedAst
  type fctb => structure ElaboratedAst
  type sigb => structure ElaboratedAst
  type fsigb => structure ElaboratedAst
  type tb => structure ElaboratedAst
  type db => structure ElaboratedAst
  type vb => structure ElaboratedAst
  type dbrhs => structure ElaboratedAst
  type cb => structure ElaboratedAst
  type eb => structure ElaboratedAst
  type ty => structure ElaboratedAst
  type paramPattern => structure ElaboratedAst
  type tagSet => structure ElaboratedAst
  type docComment => structure ElaboratedAst
  type optDocComment => structure ElaboratedAst
  type compileUnit => structure ElaboratedAst
  val pathToString
  val moduleFQNToPath
  val moduleFQNToString
  val isFQNOfFunctorParameter
  val emptySpecSet
  val appendSpecSet
  val emptyDecSet
  val appendDecSet
 }
 structure ES{
  structure AA => structure ENVSet . structure AA
  structure EA => structure ENVSet . structure EA
  type ENVSet => structure ENVSet
  val emptyENVSet
  val appendENVSet
  val bindVal
  val bindType
  val bindException
  val bindStructure
  val bindSignature
  val bindFunctor
  val bindFunctorSignature
  val bindModule
 }
 structure LF{
  structure EA => structure LinkFile . structure EA
  type item => structure LinkFile
 }
 structure U{
  val interleave
  val interleaveString
  val isPrefixOf
  val splitLast
  val sort
  val uniq
  val satisfyAny
  val satisfyAll
  val compareStringNoCase
  val tokenizeString
  val replaceString
  val replaceStringByTable
  val replaceFile
  exception MissingEscapedChar
 }
 structure DGP{
  type parameter => structure DocumentGenerationParameter
  val warn
  val error
  val onProgress
 }
 val defaultModuleListFileName
 val readLinkFile
 val writeLinkFile
}
structure Linkage{
 structure EA{
  type loc => structure ElaboratedAst
  type path => structure ElaboratedAst
  type moduleType => structure ElaboratedAst
  type moduleFQN => structure ElaboratedAst
  type moduleReference => structure ElaboratedAst
  type typeReference => structure ElaboratedAst
  type exceptionReference => structure ElaboratedAst
  type sigConst => structure ElaboratedAst
  type tyvar => structure ElaboratedAst
  type strexp => structure ElaboratedAst
  type fctexp => structure ElaboratedAst
  type wherespec => structure ElaboratedAst
  type sigexp => structure ElaboratedAst
  type fsigexp => structure ElaboratedAst
  type specSet => structure ElaboratedAst
  type decSet => structure ElaboratedAst
  type strb => structure ElaboratedAst
  type fctb => structure ElaboratedAst
  type sigb => structure ElaboratedAst
  type fsigb => structure ElaboratedAst
  type tb => structure ElaboratedAst
  type db => structure ElaboratedAst
  type vb => structure ElaboratedAst
  type dbrhs => structure ElaboratedAst
  type cb => structure ElaboratedAst
  type eb => structure ElaboratedAst
  type ty => structure ElaboratedAst
  type paramPattern => structure ElaboratedAst
  type tagSet => structure ElaboratedAst
  type docComment => structure ElaboratedAst
  type optDocComment => structure ElaboratedAst
  type compileUnit => structure ElaboratedAst
  val pathToString
  val moduleFQNToPath
  val moduleFQNToString
  val isFQNOfFunctorParameter
  val emptySpecSet
  val appendSpecSet
  val emptyDecSet
  val appendDecSet
 }
 type moduleLinkType
 type moduleLinkage
 type typeLinkType
 type typeLinkage
}
structure Binds{
 type bind
 val getModuleFQN
 val getName
 val getOptDC
 val isSigBind
 val isFsigBind
 val isStrBind
 val isFctBind
 val isTypeBind
 val isDataTypeBind
 val isConstructorBind
 val isExceptionBind
 val isValBind
}
structure Summarizer{
 structure EA{
  type loc => structure ElaboratedAst
  type path => structure ElaboratedAst
  type moduleType => structure ElaboratedAst
  type moduleFQN => structure ElaboratedAst
  type moduleReference => structure ElaboratedAst
  type typeReference => structure ElaboratedAst
  type exceptionReference => structure ElaboratedAst
  type sigConst => structure ElaboratedAst
  type tyvar => structure ElaboratedAst
  type strexp => structure ElaboratedAst
  type fctexp => structure ElaboratedAst
  type wherespec => structure ElaboratedAst
  type sigexp => structure ElaboratedAst
  type fsigexp => structure ElaboratedAst
  type specSet => structure ElaboratedAst
  type decSet => structure ElaboratedAst
  type strb => structure ElaboratedAst
  type fctb => structure ElaboratedAst
  type sigb => structure ElaboratedAst
  type fsigb => structure ElaboratedAst
  type tb => structure ElaboratedAst
  type db => structure ElaboratedAst
  type vb => structure ElaboratedAst
  type dbrhs => structure ElaboratedAst
  type cb => structure ElaboratedAst
  type eb => structure ElaboratedAst
  type ty => structure ElaboratedAst
  type paramPattern => structure ElaboratedAst
  type tagSet => structure ElaboratedAst
  type docComment => structure ElaboratedAst
  type optDocComment => structure ElaboratedAst
  type compileUnit => structure ElaboratedAst
  val pathToString
  val moduleFQNToPath
  val moduleFQNToString
  val isFQNOfFunctorParameter
  val emptySpecSet
  val appendSpecSet
  val emptyDecSet
  val appendDecSet
 }
 structure DG{
  type graph => structure DependencyGraph
  val create
  val dependsOn
  val isDependsOn
  val getClosure
  val getClosureRev
  val sort
 }
 structure L{
  structure EA => structure Linkage . structure EA
  type moduleLinkType => structure Linkage
  type moduleLinkage => structure Linkage
  type typeLinkType => structure Linkage
  type typeLinkage => structure Linkage
 }
 structure B{
  type bind => structure Binds
  val getModuleFQN
  val getName
  val getOptDC
  val isSigBind
  val isFsigBind
  val isStrBind
  val isFctBind
  val isTypeBind
  val isDataTypeBind
  val isConstructorBind
  val isExceptionBind
  val isValBind
 }
 structure U{
  val interleave
  val interleaveString
  val isPrefixOf
  val splitLast
  val sort
  val uniq
  val satisfyAny
  val satisfyAll
  val compareStringNoCase
  val tokenizeString
  val replaceString
  val replaceStringByTable
  val replaceFile
  exception MissingEscapedChar
 }
 type linkage
 type traceDirection
 val mapVisit
 val visitSigConst
 val visitStrExp
 val visitFctExp
 val visitWhereSpec
 val visitSigExp
 val visitFsigExp
 val visitSpecSet
 val visitDecSet
 val visitInclude
 val visitSigBind
 val visitFsigBind
 val visitStrBind
 val visitFctBind
 val visitTypeBind
 val visitDataTypeBind
 val visitDBRHS
 val visitExceptionBind
 val visitValBind
 val visitTyOpt
 val findIndex
 val summarize
 val getClosureOfLink
}
structure HTML{
 structure HttpMethod{
  type method
  val get
  val put
  val toString
  val fromString
 }
 structure InputType{
  type ty
  val text
  val password
  val checkbox
  val radio
  val submit
  val reset
  val file
  val hidden
  val image
  val toString
  val fromString
 }
 structure IAlign{
  type align
  val top
  val middle
  val bottom
  val left
  val right
  val toString
  val fromString
 }
 structure HAlign{
  type align
  val left
  val center
  val right
  val toString
  val fromString
 }
 structure CellVAlign{
  type align
  val top
  val middle
  val bottom
  val baseline
  val toString
  val fromString
 }
 structure CaptionAlign{
  type align
  val top
  val bottom
  val left
  val right
  val toString
  val fromString
 }
 structure ULStyle{
  type style
  val disc
  val square
  val circle
  val toString
  val fromString
 }
 structure Shape{
  type shape
  val rect
  val circle
  val poly
  val default
  val toString
  val fromString
 }
 structure TextFlowCtl{
  type control
  val left
  val right
  val all
  val none
  val toString
  val fromString
 }
 type pcdata
 type cdata
 type url
 type pixels
 type name
 type id
 type html
 type head_content
 type body
 type frame
 type block
 type list_item
 type caption
 type tr
 type table_cell
 type text
 type area
 type select_option
 val htmlVersion
 val match
}
structure MakeHTML{
 val blockList
 val textList
 val mkH
 val mkP
 val mkUL
 val mkOL
 val mkDL
 val HR
 val BR
 val mkLI
 val mkA_HREF
 val mkA_NAME
 val mkTR
 val mkTH
 val mkTH_COLSPAN
 val mkTD
 val mkTD_COLSPAN
}
structure HTMLDocumentGenerator{
 structure EA{
  type loc => structure ElaboratedAst
  type path => structure ElaboratedAst
  type moduleType => structure ElaboratedAst
  type moduleFQN => structure ElaboratedAst
  type moduleReference => structure ElaboratedAst
  type typeReference => structure ElaboratedAst
  type exceptionReference => structure ElaboratedAst
  type sigConst => structure ElaboratedAst
  type tyvar => structure ElaboratedAst
  type strexp => structure ElaboratedAst
  type fctexp => structure ElaboratedAst
  type wherespec => structure ElaboratedAst
  type sigexp => structure ElaboratedAst
  type fsigexp => structure ElaboratedAst
  type specSet => structure ElaboratedAst
  type decSet => structure ElaboratedAst
  type strb => structure ElaboratedAst
  type fctb => structure ElaboratedAst
  type sigb => structure ElaboratedAst
  type fsigb => structure ElaboratedAst
  type tb => structure ElaboratedAst
  type db => structure ElaboratedAst
  type vb => structure ElaboratedAst
  type dbrhs => structure ElaboratedAst
  type cb => structure ElaboratedAst
  type eb => structure ElaboratedAst
  type ty => structure ElaboratedAst
  type paramPattern => structure ElaboratedAst
  type tagSet => structure ElaboratedAst
  type docComment => structure ElaboratedAst
  type optDocComment => structure ElaboratedAst
  type compileUnit => structure ElaboratedAst
  val pathToString
  val moduleFQNToPath
  val moduleFQNToString
  val isFQNOfFunctorParameter
  val emptySpecSet
  val appendSpecSet
  val emptyDecSet
  val appendDecSet
 }
 structure S{
  structure EA => structure Summarizer . structure EA
  structure DG => structure Summarizer . structure DG
  structure L => structure Summarizer . structure L
  structure B => structure Summarizer . structure B
  structure U => structure Summarizer . structure U
  type linkage => structure Summarizer
  type traceDirection => structure Summarizer
  val mapVisit
  val visitSigConst
  val visitStrExp
  val visitFctExp
  val visitWhereSpec
  val visitSigExp
  val visitFsigExp
  val visitSpecSet
  val visitDecSet
  val visitInclude
  val visitSigBind
  val visitFsigBind
  val visitStrBind
  val visitFctBind
  val visitTypeBind
  val visitDataTypeBind
  val visitDBRHS
  val visitExceptionBind
  val visitValBind
  val visitTyOpt
  val findIndex
  val summarize
  val getClosureOfLink
 }
 structure B{
  type bind => structure Binds
  val getModuleFQN
  val getName
  val getOptDC
  val isSigBind
  val isFsigBind
  val isStrBind
  val isFctBind
  val isTypeBind
  val isDataTypeBind
  val isConstructorBind
  val isExceptionBind
  val isValBind
 }
 structure L{
  structure EA => structure Linkage . structure EA
  type moduleLinkType => structure Linkage
  type moduleLinkage => structure Linkage
  type typeLinkType => structure Linkage
  type typeLinkage => structure Linkage
 }
 structure FE{
  type priority => structure FormatExpression
  type assocDirection => structure FormatExpression
  type assoc => structure FormatExpression
  type expression => structure FormatExpression
  val isHigherThan
  val assocToString
  val priorityToString
  val toString
  val parse
 }
 structure BF{
  structure FE => structure BasicFormatters . structure FE
  type expression => structure BasicFormatters
  type formatter => structure BasicFormatters
  val format_unit
  val format_int
  val format_word
  val format_real
  val format_char
  val format_string
  val format_substring
  val format_exn_Ref
  val format_exn
  val format_array
  val format_vector
  val format_ref
  val format_bool
  val format_option
  val format_order
  val format_list
 }
 structure U{
  val interleave
  val interleaveString
  val isPrefixOf
  val splitLast
  val sort
  val uniq
  val satisfyAny
  val satisfyAll
  val compareStringNoCase
  val tokenizeString
  val replaceString
  val replaceStringByTable
  val replaceFile
  exception MissingEscapedChar
 }
 structure DGP{
  type parameter => structure DocumentGenerationParameter
  val warn
  val error
  val onProgress
 }
 structure HTML{
  structure HttpMethod => structure HTML . structure HttpMethod
  structure InputType => structure HTML . structure InputType
  structure IAlign => structure HTML . structure IAlign
  structure HAlign => structure HTML . structure HAlign
  structure CellVAlign => structure HTML . structure CellVAlign
  structure CaptionAlign => structure HTML . structure CaptionAlign
  structure ULStyle => structure HTML . structure ULStyle
  structure Shape => structure HTML . structure Shape
  structure TextFlowCtl => structure HTML . structure TextFlowCtl
  type pcdata => structure HTML
  type cdata => structure HTML
  type url => structure HTML
  type pixels => structure HTML
  type name => structure HTML
  type id => structure HTML
  type html => structure HTML
  type head_content => structure HTML
  type body => structure HTML
  type frame => structure HTML
  type block => structure HTML
  type list_item => structure HTML
  type caption => structure HTML
  type tr => structure HTML
  type table_cell => structure HTML
  type text => structure HTML
  type area => structure HTML
  type select_option => structure HTML
  val htmlVersion
  val match
  val blockList
  val textList
  val mkH
  val mkP
  val mkUL
  val mkOL
  val mkDL
  val HR
  val BR
  val mkLI
  val mkA_HREF
  val mkA_NAME
  val mkTR
  val mkTH
  val mkTH_COLSPAN
  val mkTD
  val mkTD_COLSPAN
 }
 type navigatedPages
 val ANCHOR_PREFIX_TYPE
 val ANCHOR_PREFIX_EXCEPTION
 val ANCHOR_PREFIX_VAL
 val ANCHOR_PREFIX_VALUECONSTRUCTOR
 val escapeHTML
 val makeFileNameForModule
 val getModuleTypeText
 val makeFileNameForSource
 val LINE_NUMBER_WIDTH
 val makeLineAnchor
 val makeLocAnchor
 val ind_s
 val ind_sd
 val ind_nsd
 val ind_s1
 val ind_ns1
 val ind_s2
 val ind_s3
 val printFormats
 val formatModuleReference
 val formatTypeReference
 val formatExceptionReference
 val formatValReference
 val formatValueConstructorReference
 val formatTy
 val formatParamPat
 val formatParamPats
 val formatTyVars
 val formatSigConst
 val formatFunctorParamSig
 val formatFunctorArg
 val formatStrExp
 val formatFctExp
 val formatWhereSpec
 val formatSigExp
 val formatFsigExp
 val formatSpecSet
 val formatDecSet
 val formatSigBind
 val formatStrBind
 val formatFctBind
 val formatFsigBind
 val formatShareStrs
 val formatShareTycs
 val formatInclude
 val formatOpen
 val formatTypeBind
 val formatDataTypeBind
 val formatValueConsturctorBind
 val formatValBind
 val formatExceptionBind
 val BRBlock
 val blockOfOptDocComment
 val blockOfOptDocCommentSummary
 val textOfAnchor
 val blockOfFormat
 val blocksOfTypeSummary
 val blockOfTypeDetail
 val blocksOfDataTypeSummary
 val blockOfDataTypeDetail
 val blocksOfValueConstructorSummary
 val blockOfValueConstructorDetail
 val blocksOfValSummary
 val blockOfValDetail
 val blocksOfExceptionSummary
 val blockOfExceptionDetail
 val blocksOfStructureSummary
 val blocksOfSignatureSummary
 val blocksOfFunctorSummary
 val blocksOfFunctorSignatureSummary
 val blocksOfOpenSummary
 val blocksOfIncludeSummary
 val blockOfSummaryList
 val blockOfDetailList
 val HTMLOfFrame
 val HTMLOfModuleList
 val bodyBlocksOfIndexes
 val bodyBlockOfDefaultHelp
 val bodyBlockOfUsesOfModule
 val bodyBlockOfOverviewPage
 val blockOfNavigationBar
 val blockOfModuleHeader
 val bodyBlockOfModulePage
 val generateSummaryListOfDecSet
 val generateDetailListOfDecSet
 val generateForDecSet
 val generateForSpecSet
 val generateForStructure
 val generateForSignature
 val generateForFunctor
 val generateForFunctorSignature
 val generateForTopLevelDecSet
 val blockOfSourceCode
 val generateDocument
}
structure SMLDoc{
 structure DGP{
  type parameter => structure DocumentGenerationParameter
  val warn
  val error
  val onProgress
 }
 val preludeInfixes
 val preludeTypes
 val preludeStructures
 val makeDocument
}
structure CMSemantic{
 type addsym
 type mulsym
 type eqsym
 type ineqsym
 type pathName
 type description
}
structure FileID{
 structure F{
 }
 structure P{
 }
 type id
 type ord_key
 val compare
 val fileId
 val canonical
}
structure SourcePath{
 structure P{
 }
 structure F{
 }
 structure I{
  structure F => structure FileID . structure F
  structure P => structure FileID . structure P
  type id => structure FileID
  type ord_key => structure FileID
  val compare
  val fileId
  val canonical
 }
 type prepath
 type elab
 type dir
 type file
 type prefile
 type stdspec
 val impossible
 val string2pp
 val absElab
 val cwd
 val pre
 val dirPP
 val dirElab
 val augPP
 val augElab
 val elab_dir
 val elab_file
 val pp2name
 val dir
 val osstring
 val osstring_prefile
 val osstring_dir
 val parseStdspec
 val file
 val prefile
 val native
 val standard
 val extend
 val osstring_prefile_relative
 val osstring_relative
}
structure CMFileParser{
 val readCMFile
 val isCMFileName
}
structure GetOpt{
 type arg_order
 type arg_descr
 type opt_descr
 type opt_kind
 val unlines
 val unzip3
 val zipWith3
 val sepBy
 val breakeq
 val fmtShort
 val fmtLong
 val fmtOpt
 val paste
 val repeat
 val flushLeft
 val maximum
 val sameLen
 val usageInfo
 val errAmbig
 val errReq
 val errUnrec
 val errNoArg
 val longOpt
 val shortOpt
 val getNext
 val getOpt
}
structure Main{
 structure G{
  type arg_order => structure GetOpt
  type arg_descr => structure GetOpt
  type opt_descr => structure GetOpt
  type opt_kind => structure GetOpt
  val unlines
  val unzip3
  val zipWith3
  val sepBy
  val breakeq
  val fmtShort
  val fmtLong
  val fmtOpt
  val paste
  val repeat
  val flushLeft
  val maximum
  val sameLen
  val usageInfo
  val errAmbig
  val errReq
  val errUnrec
  val errNoArg
  val longOpt
  val shortOpt
  val getNext
  val getOpt
 }
 structure U{
  val interleave
  val interleaveString
  val isPrefixOf
  val splitLast
  val sort
  val uniq
  val satisfyAny
  val satisfyAll
  val compareStringNoCase
  val tokenizeString
  val replaceString
  val replaceStringByTable
  val replaceFile
  exception MissingEscapedChar
 }
 structure PU{
  val trPath
  val isAbsolute
  val makeAbsolute
  val collectFilesInDir
  val splitDirFile
  val joinDirFile
  val splitBaseExt
  val joinBaseExt
 }
 structure DGP{
  type parameter => structure DocumentGenerationParameter
  val warn
  val error
  val onProgress
 }
 type parameterOption
 val usageHeader
 val optionDescs
 val parseCommandLine
 val parseArgFile
 val expandFileName
 val main
 exception InvalidParameter
}
structure PrHTML{
 structure H{
  structure HttpMethod => structure HTML . structure HttpMethod
  structure InputType => structure HTML . structure InputType
  structure IAlign => structure HTML . structure IAlign
  structure HAlign => structure HTML . structure HAlign
  structure CellVAlign => structure HTML . structure CellVAlign
  structure CaptionAlign => structure HTML . structure CaptionAlign
  structure ULStyle => structure HTML . structure ULStyle
  structure Shape => structure HTML . structure Shape
  structure TextFlowCtl => structure HTML . structure TextFlowCtl
  type pcdata => structure HTML
  type cdata => structure HTML
  type url => structure HTML
  type pixels => structure HTML
  type name => structure HTML
  type id => structure HTML
  type html => structure HTML
  type head_content => structure HTML
  type body => structure HTML
  type frame => structure HTML
  type block => structure HTML
  type list_item => structure HTML
  type caption => structure HTML
  type tr => structure HTML
  type table_cell => structure HTML
  type text => structure HTML
  type area => structure HTML
  type select_option => structure HTML
  val htmlVersion
  val match
 }
 type outstream
 type attr_data
 val putc
 val puts
 val httpMethod
 val inputType
 val iAlign
 val hAlign
 val cellVAlign
 val captionAlign
 val ulStyle
 val shape
 val textFlowCtl
 val fmtTag
 val fmtEndTag
 val prTag
 val prEndTag
 val newLine
 val space
 val setPre
 val prBlock
 val prListItems
 val prDLItems
 val prCaption
 val prTableRows
 val prTableCell
 val prEmph
 val prText
 val prArea
 val prOption
 val prPCData
 val prFrame
 val prBody
 val prHeadElement
 val prHTML
}
signature PATH_UTILITY{
 val trPath
 val isAbsolute
 val makeAbsolute
 val collectFilesInDir
 val joinBaseExt
 val joinDirFile
 val splitBaseExt
 val splitDirFile
}
signature AST{
 type fixity
 type srcpos
 type region
 type path
 type tyvar
 type sigConst
 type exp
 type rule
 type pat
 type strexp
 type fctexp
 type wherespec
 type sigexp
 type fsigexp
 type spec
 type dec
 type vb
 type rvb
 type fb
 type clause
 type tb
 type db
 type dbrhs
 type eb
 type strb
 type fctb
 type sigb
 type fsigb
 type ty
 type tyrow
}
signature ASTUTIL{
 val makeSEQdec
 val layered
 val arrowTycon
 val bogusID
 val exnID
 val symArg
 val itsym
 val unitExp
 val unitPat
 val QuoteExp
 val AntiquoteExp
}
signature EASY_HTML_PARSER{
 val getBodyOfHTML
}
signature PARSER{
 type context
 val emptyContext
 val addInfix
 val parseFile
}
signature DEPENDENCY_GRAPH{
 type graph
 val create
 val dependsOn
 val isDependsOn
 val getClosure
 val getClosureRev
 val sort
}
signature DEPENDENCY_ANALYZER{
 val sort
}
signature ELABORATOR{
 type path
 val addExternalType
 val addExternalException
 val addExternalStructure
 val addExternalSignature
 val addExternalFunctor
 val addExternalFunctorSignature
 val elaborate
}
signature EXTERNALREF_LINKER{
 val defaultModuleListFileName
 val readLinkFile
 val writeLinkFile
}
signature SUMMARIZER{
 type linkage
 type traceDirection
 val summarize
 val getClosureOfLink
}
signature DOCUMENT_GENERATOR{
 val generateDocument
}
signature HTML{
 structure HttpMethod{
  type method
  val get
  val put
  val toString
  val fromString
 }
 structure InputType{
  type ty
  val text
  val password
  val checkbox
  val radio
  val submit
  val reset
  val file
  val hidden
  val image
  val toString
  val fromString
 }
 structure IAlign{
  type align
  val top
  val middle
  val bottom
  val left
  val right
  val toString
  val fromString
 }
 structure HAlign{
  type align
  val left
  val center
  val right
  val toString
  val fromString
 }
 structure CellVAlign{
  type align
  val top
  val middle
  val bottom
  val baseline
  val toString
  val fromString
 }
 structure CaptionAlign{
  type align
  val top
  val bottom
  val toString
  val fromString
 }
 structure ULStyle{
  type style
  val disc
  val square
  val circle
  val toString
  val fromString
 }
 structure Shape{
  type shape
  val rect
  val circle
  val poly
  val default
  val toString
  val fromString
 }
 structure TextFlowCtl{
  type control
  val left
  val right
  val all
  val none
  val toString
  val fromString
 }
 type pcdata
 type cdata
 type url
 type pixels
 type name
 type id
 type html
 type head_content
 type body
 type frame
 type block
 type list_item
 type caption
 type tr
 type table_cell
 type text
 type area
 type select_option
 val htmlVersion
}
signature SMLDOC{
 val makeDocument
}
signature CM_SEMANTIC{
 type addsym
 type mulsym
 type eqsym
 type ineqsym
 type pathName
 type description
 val PLUS
 val MINUS
 val TIMES
 val DIV
 val MOD
 val EQ
 val NE
 val GT
 val GE
 val LT
 val LE
}
signature FILE_ID{
 type id
 type ord_key
 val compare
 val fileId
 val canonical
}
signature SOURCE_PATH{
 type file
 type dir
 type prefile
 val native
 val standard
 val extend
 val file
 val pre
 val cwd
 val dir
 val osstring
 val osstring_prefile_relative
 val osstring_dir
 val osstring_prefile
}
signature CMFILE_PARSER{
 val isCMFileName
 val readCMFile
}
signature GETOPT{
 type arg_order
 type arg_descr
 type opt_descr
 val usageInfo
 val getOpt
}
functor TokenTable{
 val symIdTbl
 val idTbl
 val checkId
 val checkSymId
 val checkTyvar
 exception NotToken
}
