# Makefile for SMLDoc
# $Id: Makefile.in,v 1.9.2.1 2007/03/26 09:36:38 katsu Exp $

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=$(exec_prefix)/bin
DESTDIR=

EXEEXT=@EXEEXT@

INSTALL=install
MLTON=@MLTON@
MLYACC=mlyacc
MLLEX=mllex
SML=@SMLCM@
SML_CMD=@SML@
MAINFUNC=@MAINFUNC@
HEAPNAME=@HEAPNAME@
SMLSHARP=@SMLSHARP@

MLTON_TARGET=bin/smldoc$(EXEEXT)
SMLNJ_TARGET=bin/smldoc
SMLSHARP_TARGET=bin/smldoc

LEXFILES =  src/main/ML.lex \
            src/main/ParamPattern.lex \
            src/main/LinkFile.lex \
            src/main/smlnjcm/CM.lex

YACCFILES = src/main/ML.grm \
            src/main/ParamPattern.grm \
            src/main/LinkFile.grm \
            src/main/smlnjcm/CM.grm

all: @COMPILER@-build

clean:
	-rm -f $(MLTON_TARGET) $(SMLNJ_TARGET)
	-rm -rf src/main/CM src/test/CM
	-rm -rf src/main/.cm src/test/.cm
	-rm -f $(LEXFILES:.lex=.lex.sml)
	-rm -f $(YACCFILES:.grm=.grm.sml)
	-rm -f $(YACCFILES:.grm=.grm.sig)
	-rm -f $(YACCFILES:.grm=.grm.desc)

########################################

.SUFFIXES: .lex .grm .lex.sml .grm.sml .sml

.lex.lex.sml:
	$(MLLEX) $<

.grm.grm.sml:
	$(MLYACC) $<

########################################
# for build by MLton

# build every time.
mlton-build: $(LEXFILES:.lex=.lex.sml) $(YACCFILES:.grm=.grm.sml)
	$(MLTON) -output $(MLTON_TARGET) src/mlton/smldoc.mlb

src/main/ML.lex.sml: src/main/ML.lex
src/main/ParamPattern.lex.sml: src/main/ParamPattern.lex
src/main/LinkFile.lex.sml: src/main/LinkFile.lex
src/main/smlnjcm/CM.lex.sml: src/main/smlnjcm/CM.lex
src/main/ML.grm.sml: src/main/ML.grm
src/main/ParamPattern.grm.sml: src/main/ParamPattern.grm
src/main/LinkFile.grm.sml: src/main/LinkFile.grm
src/main/smlnjcm/CM.grm.sml: src/main/smlnjcm/CM.grm

########################################
# for build by SML#

# build every time.
smlsharp-build: $(LEXFILES:.lex=.lex.sml) $(YACCFILES:.grm=.grm.sml)
	$(SMLSHARP) -o $(SMLSHARP_TARGET) -c src/main/sources.sml

########################################
# for build by SML/NJ

# Since the filename of heap file generated by exportFn cannot be detected
# easily, we cannot write a make-rule for the heap file.
# So, we make a rule for bin/smldoc delegate a rule for the heap file.

smlnj-build:
	$(MAKE) heap
	echo "#!/bin/sh" > $(SMLNJ_TARGET)
	echo "SML='"`echo '$(SML_CMD)' | sed 's,^cmd /c ,,'`"'" >> $(SMLNJ_TARGET)
	echo "HEAPNAME='$(HEAPNAME)'" >> $(SMLNJ_TARGET)
	if expr "$(SML_CMD)" : "cmd /c " > /dev/null 2>&1; then \
	  echo 'cmd /c "$$SML @SMLload=$$HEAPNAME $$*"' >> $(SMLNJ_TARGET); \
	else \
	  echo 'exec $$SML @SMLload="$$HEAPNAME" "$$@"' >> $(SMLNJ_TARGET); \
	fi
	chmod +x $(SMLNJ_TARGET)

heap:
	cd src/main && \
	echo 'CM.make @CM_MAKE_ARG@;' \
	     "SMLofNJ.exportFn(\"$(HEAPNAME)\",$(MAINFUNC));" \
	| $(SML)

test:
	cd src/test && \
	echo "SMLofNJ.Internals.GC.messages false;" \
	     'CM.make @CM_MAKE_ARG@;' \
	     "TestMain.test();" \
	| $(SML_CMD)

#install: $(TARGETS)
#	$(INSTALL) -m 755 -d $(DESTDIR)$(bindir)
#	$(INSTALL) -m 755 bin/smldoc $(DESTDIR)$(bindir)
